package jrp.epos_ui;

/**
 * @author James Park
 */
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

import jrp.epos_ui.classes.Catagory;
import jrp.epos_ui.classes.DragListener;
import jrp.epos_ui.classes.Employee;
import jrp.epos_ui.classes.Login;
import static jrp.epos_ui.classes.Login.populateComboBoxes;
import static jrp.epos_ui.classes.Login.updateComboBoxes;
import jrp.epos_ui.classes.Payment;
import jrp.epos_ui.classes.Product;
import jrp.epos_ui.classes.Transaction;
import jrp.epos_ui.classes.TransactionItem;

public class EPOS_GUI extends javax.swing.JFrame {

    /**
     * Creates new form EPOS_GUI
     */
    public EPOS_GUI() {
        initComponents();
        this.setSize(1240, 800);
        this.setLocationRelativeTo(null);
        setBackground(new Color(0, 0, 0, 0));
        DragListener drag = new DragListener();
        this.addMouseListener(drag);
        this.addMouseMotionListener(drag);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpIsManager = new javax.swing.ButtonGroup();
        btngrpIsManagerForUpdate = new javax.swing.ButtonGroup();
        btngrpIsManagerForDelete = new javax.swing.ButtonGroup();
        pnlMainBody = new javax.swing.JPanel();
        pnlMain = new javax.swing.JTabbedPane();
        tabTill = new javax.swing.JPanel();
        pnlProducts = new javax.swing.JPanel();
        pnlPopularItems = new javax.swing.JTabbedPane();
        pnlHotDrinks = new javax.swing.JPanel();
        btnHotDrinksPopularNo1 = new javax.swing.JButton();
        btnHotDrinksPopularNo2 = new javax.swing.JButton();
        btnHotDrinksPopularNo3 = new javax.swing.JButton();
        btnHotDrinksPopularNo4 = new javax.swing.JButton();
        btnHotDrinksPopularNo5 = new javax.swing.JButton();
        btnHotDrinksPopularNo6 = new javax.swing.JButton();
        btnHotDrinksPopularNo9 = new javax.swing.JButton();
        btnHotDrinksPopularNo8 = new javax.swing.JButton();
        btnHotDrinksPopularNo7 = new javax.swing.JButton();
        lblHotDrinksPopularNo1 = new javax.swing.JLabel();
        lblHotDrinksPopularNo2 = new javax.swing.JLabel();
        lblHotDrinksPopularNo3 = new javax.swing.JLabel();
        lblHotDrinksPopularNo4 = new javax.swing.JLabel();
        lblHotDrinksPopularNo5 = new javax.swing.JLabel();
        lblHotDrinksPopularNo6 = new javax.swing.JLabel();
        lblHotDrinksPopularNo8 = new javax.swing.JLabel();
        lblHotDrinksPopularNo9 = new javax.swing.JLabel();
        lblHotDrinksPopularNo7 = new javax.swing.JLabel();
        pnlColdDrinks = new javax.swing.JPanel();
        btnColdDrinksPopularNo1 = new javax.swing.JButton();
        btnColdDrinksPopularNo2 = new javax.swing.JButton();
        btnColdDrinksPopularNo3 = new javax.swing.JButton();
        btnColdDrinksPopularNo4 = new javax.swing.JButton();
        btnColdDrinksPopularNo5 = new javax.swing.JButton();
        btnColdDrinksPopularNo6 = new javax.swing.JButton();
        btnColdDrinksPopularNo9 = new javax.swing.JButton();
        btnColdDrinksPopularNo8 = new javax.swing.JButton();
        btnColdDrinksPopularNo7 = new javax.swing.JButton();
        lblColdDrinksPopularNo1 = new javax.swing.JLabel();
        lblColdDrinksPopularNo2 = new javax.swing.JLabel();
        lblColdDrinksPopularNo4 = new javax.swing.JLabel();
        lblColdDrinksPopularNo5 = new javax.swing.JLabel();
        lblColdDrinksPopularNo6 = new javax.swing.JLabel();
        lblColdDrinksPopularNo7 = new javax.swing.JLabel();
        lblColdDrinksPopularNo8 = new javax.swing.JLabel();
        lblColdDrinksPopularNo9 = new javax.swing.JLabel();
        lblColdDrinksPopularNo3 = new javax.swing.JLabel();
        pnlDonuts = new javax.swing.JPanel();
        btnDonutsPopularNo1 = new javax.swing.JButton();
        btnDonutsPopularNo2 = new javax.swing.JButton();
        btnDonutsPopularNo3 = new javax.swing.JButton();
        btnDonutsPopularNo4 = new javax.swing.JButton();
        btnDonutsPopularNo5 = new javax.swing.JButton();
        btnDonutsPopularNo6 = new javax.swing.JButton();
        btnDonutsPopularNo9 = new javax.swing.JButton();
        btnDonutsPopularNo8 = new javax.swing.JButton();
        btnDonutsPopularNo7 = new javax.swing.JButton();
        lblDonutsPopularNo4 = new javax.swing.JLabel();
        lblDonutsPopularNo5 = new javax.swing.JLabel();
        lblDonutsPopularNo6 = new javax.swing.JLabel();
        lblDonutsPopularNo7 = new javax.swing.JLabel();
        lblDonutsPopularNo8 = new javax.swing.JLabel();
        lblDonutsPopularNo9 = new javax.swing.JLabel();
        lblDonutsPopularNo1 = new javax.swing.JLabel();
        lblDonutsPopularNo2 = new javax.swing.JLabel();
        lblDonutsPopularNo3 = new javax.swing.JLabel();
        pnlHotFood = new javax.swing.JPanel();
        btnHotFoodPopularNo1 = new javax.swing.JButton();
        btnHotFoodPopularNo2 = new javax.swing.JButton();
        btnHotFoodPopularNo3 = new javax.swing.JButton();
        btnHotFoodPopularNo4 = new javax.swing.JButton();
        btnHotFoodPopularNo5 = new javax.swing.JButton();
        btnHotFoodPopularNo6 = new javax.swing.JButton();
        btnHotFoodPopularNo9 = new javax.swing.JButton();
        btnHotFoodPopularNo8 = new javax.swing.JButton();
        btnHotFoodPopularNo7 = new javax.swing.JButton();
        lblHotFoodPopularNo1 = new javax.swing.JLabel();
        lblHotFoodPopularNo2 = new javax.swing.JLabel();
        lblHotFoodPopularNo3 = new javax.swing.JLabel();
        lblHotFoodPopularNo4 = new javax.swing.JLabel();
        lblHotFoodPopularNo5 = new javax.swing.JLabel();
        lblHotFoodPopularNo6 = new javax.swing.JLabel();
        lblHotFoodPopularNo7 = new javax.swing.JLabel();
        lblHotFoodPopularNo8 = new javax.swing.JLabel();
        lblHotFoodPopularNo9 = new javax.swing.JLabel();
        lblSearchbyName = new javax.swing.JLabel();
        txtGetProductSearch = new javax.swing.JTextField();
        paneResultsTable = new javax.swing.JScrollPane();
        tblSearchResults = new javax.swing.JTable();
        btnSelectProduct = new javax.swing.JButton();
        pnlKeyPad = new javax.swing.JPanel();
        btnKeypadEight = new javax.swing.JButton();
        btnKeypadNine = new javax.swing.JButton();
        btnKeypadSeven = new javax.swing.JButton();
        btnKeypadFive = new javax.swing.JButton();
        btnKeypadFour = new javax.swing.JButton();
        btnKeypadSix = new javax.swing.JButton();
        btnKeypadThree = new javax.swing.JButton();
        btnKeypadTwo = new javax.swing.JButton();
        btnKeypadOne = new javax.swing.JButton();
        btnKeypadHundred = new javax.swing.JButton();
        btnKeypadDecimal = new javax.swing.JButton();
        btnKeypadZero = new javax.swing.JButton();
        btnKeypadEnter = new javax.swing.JButton();
        btnKeypadQty = new javax.swing.JButton();
        btnKeypadClr = new javax.swing.JButton();
        pnlTransaction = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listTransaction = new javax.swing.JList<>();
        txtDisplayEntryAndTotal = new javax.swing.JTextField();
        btnScrollDown = new javax.swing.JButton();
        btnScrollUp = new javax.swing.JButton();
        btnVoidSelected = new javax.swing.JButton();
        btnPayCash = new javax.swing.JButton();
        btnPayCard = new javax.swing.JButton();
        pnlExtras = new javax.swing.JPanel();
        btnExtrasDcaf = new javax.swing.JButton();
        btnExtrasSkim = new javax.swing.JButton();
        btnExtrasSoya = new javax.swing.JButton();
        btnExtrasAlmond = new javax.swing.JButton();
        btnExtrasCaramel = new javax.swing.JButton();
        btnExtrasVinilla = new javax.swing.JButton();
        btnExtrasCinnamon = new javax.swing.JButton();
        btnExtrasPumkin = new javax.swing.JButton();
        btnExtrasCinnamonGinger = new javax.swing.JButton();
        tabUser = new javax.swing.JPanel();
        pnlCurrentUser = new javax.swing.JPanel();
        lblEmployeeID = new javax.swing.JLabel();
        lblEmployeeFirstName = new javax.swing.JLabel();
        lblEmployeeLastName = new javax.swing.JLabel();
        scrlpSalesReport = new javax.swing.JScrollPane();
        tblSalesReport = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        tabManager = new javax.swing.JPanel();
        lblManagerID = new javax.swing.JLabel();
        lblManagerFirstName = new javax.swing.JLabel();
        lblManagerLastName = new javax.swing.JLabel();
        pnlUserCRUD = new javax.swing.JTabbedPane();
        tabCreate = new javax.swing.JPanel();
        lblGetFirstName = new javax.swing.JLabel();
        txtGetFirstName = new javax.swing.JTextField();
        txtGetLastName = new javax.swing.JTextField();
        lblGetLastName = new javax.swing.JLabel();
        btnCreatePin = new javax.swing.JButton();
        txtGetPin = new javax.swing.JTextField();
        radManager = new javax.swing.JRadioButton();
        radEmployee = new javax.swing.JRadioButton();
        btnCreateUser = new javax.swing.JButton();
        btnClearCreate = new javax.swing.JButton();
        tabUpdate = new javax.swing.JPanel();
        btnClearCreateForUpdate = new javax.swing.JButton();
        txtGetLastNameForUpdate = new javax.swing.JTextField();
        lblGetLastName1 = new javax.swing.JLabel();
        btnCreateNewPinForUpdate = new javax.swing.JButton();
        txtGetPinForUpdate = new javax.swing.JTextField();
        radManagerForUpdate = new javax.swing.JRadioButton();
        radEmployeeForUpdate = new javax.swing.JRadioButton();
        lblGetFirstName1 = new javax.swing.JLabel();
        btnUpdateUser = new javax.swing.JButton();
        txtGetFirstNameForUpdate = new javax.swing.JTextField();
        lblSelectUserUpdate = new javax.swing.JLabel();
        cmboGetEmployeeForUpdate = new javax.swing.JComboBox<>();
        tabDelete = new javax.swing.JPanel();
        btnClearCreateForDelete = new javax.swing.JButton();
        lblSelectUserForDelete = new javax.swing.JLabel();
        txtGetLastNameForDelete = new javax.swing.JTextField();
        lblGetLastNameForDelete = new javax.swing.JLabel();
        cmboGetEmployeeForDelete = new javax.swing.JComboBox<>();
        radManagerForDelete = new javax.swing.JRadioButton();
        radEmployeeForDelete = new javax.swing.JRadioButton();
        lblGetFirstNameForDelete = new javax.swing.JLabel();
        btnDeleteUser = new javax.swing.JButton();
        txtGetFirstNameForDelete = new javax.swing.JTextField();
        pnlHeader = new javax.swing.JPanel();
        pnlDateAndUser = new javax.swing.JPanel();
        lblHeaderDate = new javax.swing.JLabel();
        lblHeaderCurrentUser = new javax.swing.JLabel();
        imgStoreLogo = new javax.swing.JLabel();
        lblStoreName = new javax.swing.JLabel();
        mnuBar = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuStoreTransaction = new javax.swing.JMenuItem();
        mnuStoredTransactions = new javax.swing.JMenu();
        mnuStoredTransactionOne = new javax.swing.JMenuItem();
        mnuStoredTransactionTwo = new javax.swing.JMenuItem();
        mnuStoredTransactionThree = new javax.swing.JMenuItem();
        mnuStoredTransactionFour = new javax.swing.JMenuItem();
        mnuStoredTransactionFive = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuSeeLastTransaction = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuVoidTransaction = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mnuLogout = new javax.swing.JMenuItem();
        mnuExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Café Java");
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        pnlMainBody.setBackground(new java.awt.Color(255, 200, 163));
        pnlMainBody.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlMainBody.setLayout(null);

        pnlMain.setBackground(new java.awt.Color(195, 142, 106));
        pnlMain.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlMain.setForeground(new java.awt.Color(40, 113, 117));
        pnlMain.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N

        tabTill.setBackground(new java.awt.Color(195, 142, 106));
        tabTill.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabTill.setLayout(null);

        pnlProducts.setBackground(new java.awt.Color(255, 200, 163));
        pnlProducts.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EXTRAS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 1, 12), new java.awt.Color(40, 113, 117))); // NOI18N
        pnlProducts.setLayout(null);

        pnlPopularItems.setBackground(new java.awt.Color(195, 142, 106));
        pnlPopularItems.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlPopularItems.setForeground(new java.awt.Color(40, 113, 117));
        pnlPopularItems.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        pnlPopularItems.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N

        pnlHotDrinks.setBackground(new java.awt.Color(255, 200, 163));
        pnlHotDrinks.setLayout(null);

        btnHotDrinksPopularNo1.setBackground(new java.awt.Color(40, 113, 117));
        btnHotDrinksPopularNo1.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnHotDrinksPopularNo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotDrinksPopularNo1ActionPerformed(evt);
            }
        });
        pnlHotDrinks.add(btnHotDrinksPopularNo1);
        btnHotDrinksPopularNo1.setBounds(36, 26, 65, 65);

        btnHotDrinksPopularNo2.setBackground(new java.awt.Color(40, 113, 117));
        btnHotDrinksPopularNo2.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnHotDrinksPopularNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotDrinksPopularNo2ActionPerformed(evt);
            }
        });
        pnlHotDrinks.add(btnHotDrinksPopularNo2);
        btnHotDrinksPopularNo2.setBounds(142, 26, 65, 65);

        btnHotDrinksPopularNo3.setBackground(new java.awt.Color(40, 113, 117));
        btnHotDrinksPopularNo3.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnHotDrinksPopularNo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotDrinksPopularNo3ActionPerformed(evt);
            }
        });
        pnlHotDrinks.add(btnHotDrinksPopularNo3);
        btnHotDrinksPopularNo3.setBounds(248, 26, 65, 65);

        btnHotDrinksPopularNo4.setBackground(new java.awt.Color(40, 113, 117));
        btnHotDrinksPopularNo4.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnHotDrinksPopularNo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotDrinksPopularNo4ActionPerformed(evt);
            }
        });
        pnlHotDrinks.add(btnHotDrinksPopularNo4);
        btnHotDrinksPopularNo4.setBounds(36, 117, 65, 65);

        btnHotDrinksPopularNo5.setBackground(new java.awt.Color(40, 113, 117));
        btnHotDrinksPopularNo5.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnHotDrinksPopularNo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotDrinksPopularNo5ActionPerformed(evt);
            }
        });
        pnlHotDrinks.add(btnHotDrinksPopularNo5);
        btnHotDrinksPopularNo5.setBounds(142, 117, 65, 65);

        btnHotDrinksPopularNo6.setBackground(new java.awt.Color(40, 113, 117));
        btnHotDrinksPopularNo6.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnHotDrinksPopularNo6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotDrinksPopularNo6ActionPerformed(evt);
            }
        });
        pnlHotDrinks.add(btnHotDrinksPopularNo6);
        btnHotDrinksPopularNo6.setBounds(248, 117, 65, 65);

        btnHotDrinksPopularNo9.setBackground(new java.awt.Color(40, 113, 117));
        btnHotDrinksPopularNo9.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnHotDrinksPopularNo9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotDrinksPopularNo9ActionPerformed(evt);
            }
        });
        pnlHotDrinks.add(btnHotDrinksPopularNo9);
        btnHotDrinksPopularNo9.setBounds(248, 208, 65, 65);

        btnHotDrinksPopularNo8.setBackground(new java.awt.Color(40, 113, 117));
        btnHotDrinksPopularNo8.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnHotDrinksPopularNo8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotDrinksPopularNo8ActionPerformed(evt);
            }
        });
        pnlHotDrinks.add(btnHotDrinksPopularNo8);
        btnHotDrinksPopularNo8.setBounds(142, 208, 65, 65);

        btnHotDrinksPopularNo7.setBackground(new java.awt.Color(40, 113, 117));
        btnHotDrinksPopularNo7.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnHotDrinksPopularNo7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotDrinksPopularNo7ActionPerformed(evt);
            }
        });
        pnlHotDrinks.add(btnHotDrinksPopularNo7);
        btnHotDrinksPopularNo7.setBounds(36, 208, 65, 65);

        lblHotDrinksPopularNo1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotDrinksPopularNo1.setForeground(new java.awt.Color(40, 113, 117));
        lblHotDrinksPopularNo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotDrinksPopularNo1.setText("jLabel1");
        lblHotDrinksPopularNo1.setAutoscrolls(true);
        pnlHotDrinks.add(lblHotDrinksPopularNo1);
        lblHotDrinksPopularNo1.setBounds(19, 6, 100, 16);

        lblHotDrinksPopularNo2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotDrinksPopularNo2.setForeground(new java.awt.Color(40, 113, 117));
        lblHotDrinksPopularNo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotDrinksPopularNo2.setText("jLabel1");
        lblHotDrinksPopularNo2.setAutoscrolls(true);
        pnlHotDrinks.add(lblHotDrinksPopularNo2);
        lblHotDrinksPopularNo2.setBounds(125, 6, 100, 16);

        lblHotDrinksPopularNo3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotDrinksPopularNo3.setForeground(new java.awt.Color(40, 113, 117));
        lblHotDrinksPopularNo3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotDrinksPopularNo3.setText("jLabel1");
        lblHotDrinksPopularNo3.setAutoscrolls(true);
        pnlHotDrinks.add(lblHotDrinksPopularNo3);
        lblHotDrinksPopularNo3.setBounds(231, 6, 100, 16);

        lblHotDrinksPopularNo4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotDrinksPopularNo4.setForeground(new java.awt.Color(40, 113, 117));
        lblHotDrinksPopularNo4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotDrinksPopularNo4.setText("jLabel1");
        lblHotDrinksPopularNo4.setAutoscrolls(true);
        pnlHotDrinks.add(lblHotDrinksPopularNo4);
        lblHotDrinksPopularNo4.setBounds(19, 97, 100, 16);

        lblHotDrinksPopularNo5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotDrinksPopularNo5.setForeground(new java.awt.Color(40, 113, 117));
        lblHotDrinksPopularNo5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotDrinksPopularNo5.setText("jLabel1");
        lblHotDrinksPopularNo5.setAutoscrolls(true);
        pnlHotDrinks.add(lblHotDrinksPopularNo5);
        lblHotDrinksPopularNo5.setBounds(125, 97, 100, 16);

        lblHotDrinksPopularNo6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotDrinksPopularNo6.setForeground(new java.awt.Color(40, 113, 117));
        lblHotDrinksPopularNo6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotDrinksPopularNo6.setText("jLabel1");
        lblHotDrinksPopularNo6.setAutoscrolls(true);
        pnlHotDrinks.add(lblHotDrinksPopularNo6);
        lblHotDrinksPopularNo6.setBounds(231, 97, 100, 16);

        lblHotDrinksPopularNo8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotDrinksPopularNo8.setForeground(new java.awt.Color(40, 113, 117));
        lblHotDrinksPopularNo8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotDrinksPopularNo8.setText("jLabel1");
        lblHotDrinksPopularNo8.setAutoscrolls(true);
        pnlHotDrinks.add(lblHotDrinksPopularNo8);
        lblHotDrinksPopularNo8.setBounds(125, 188, 100, 16);

        lblHotDrinksPopularNo9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotDrinksPopularNo9.setForeground(new java.awt.Color(40, 113, 117));
        lblHotDrinksPopularNo9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotDrinksPopularNo9.setText("jLabel1");
        lblHotDrinksPopularNo9.setAutoscrolls(true);
        pnlHotDrinks.add(lblHotDrinksPopularNo9);
        lblHotDrinksPopularNo9.setBounds(231, 188, 100, 16);

        lblHotDrinksPopularNo7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotDrinksPopularNo7.setForeground(new java.awt.Color(40, 113, 117));
        lblHotDrinksPopularNo7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotDrinksPopularNo7.setText("jLabel1");
        lblHotDrinksPopularNo7.setAutoscrolls(true);
        pnlHotDrinks.add(lblHotDrinksPopularNo7);
        lblHotDrinksPopularNo7.setBounds(19, 188, 100, 16);

        pnlPopularItems.addTab("Hot Drinks", pnlHotDrinks);

        pnlColdDrinks.setBackground(new java.awt.Color(255, 200, 163));
        pnlColdDrinks.setLayout(null);

        btnColdDrinksPopularNo1.setBackground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnColdDrinksPopularNo1.setForeground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColdDrinksPopularNo1ActionPerformed(evt);
            }
        });
        pnlColdDrinks.add(btnColdDrinksPopularNo1);
        btnColdDrinksPopularNo1.setBounds(36, 26, 65, 65);

        btnColdDrinksPopularNo2.setBackground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnColdDrinksPopularNo2.setForeground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColdDrinksPopularNo2ActionPerformed(evt);
            }
        });
        pnlColdDrinks.add(btnColdDrinksPopularNo2);
        btnColdDrinksPopularNo2.setBounds(142, 26, 65, 65);

        btnColdDrinksPopularNo3.setBackground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnColdDrinksPopularNo3.setForeground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColdDrinksPopularNo3ActionPerformed(evt);
            }
        });
        pnlColdDrinks.add(btnColdDrinksPopularNo3);
        btnColdDrinksPopularNo3.setBounds(248, 26, 65, 65);

        btnColdDrinksPopularNo4.setBackground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnColdDrinksPopularNo4.setForeground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColdDrinksPopularNo4ActionPerformed(evt);
            }
        });
        pnlColdDrinks.add(btnColdDrinksPopularNo4);
        btnColdDrinksPopularNo4.setBounds(36, 117, 65, 65);

        btnColdDrinksPopularNo5.setBackground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnColdDrinksPopularNo5.setForeground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColdDrinksPopularNo5ActionPerformed(evt);
            }
        });
        pnlColdDrinks.add(btnColdDrinksPopularNo5);
        btnColdDrinksPopularNo5.setBounds(142, 117, 65, 65);

        btnColdDrinksPopularNo6.setBackground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnColdDrinksPopularNo6.setForeground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColdDrinksPopularNo6ActionPerformed(evt);
            }
        });
        pnlColdDrinks.add(btnColdDrinksPopularNo6);
        btnColdDrinksPopularNo6.setBounds(248, 117, 65, 65);

        btnColdDrinksPopularNo9.setBackground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnColdDrinksPopularNo9.setForeground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColdDrinksPopularNo9ActionPerformed(evt);
            }
        });
        pnlColdDrinks.add(btnColdDrinksPopularNo9);
        btnColdDrinksPopularNo9.setBounds(248, 208, 65, 65);

        btnColdDrinksPopularNo8.setBackground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnColdDrinksPopularNo8.setForeground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColdDrinksPopularNo8ActionPerformed(evt);
            }
        });
        pnlColdDrinks.add(btnColdDrinksPopularNo8);
        btnColdDrinksPopularNo8.setBounds(142, 208, 65, 65);

        btnColdDrinksPopularNo7.setBackground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnColdDrinksPopularNo7.setForeground(new java.awt.Color(40, 113, 117));
        btnColdDrinksPopularNo7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColdDrinksPopularNo7ActionPerformed(evt);
            }
        });
        pnlColdDrinks.add(btnColdDrinksPopularNo7);
        btnColdDrinksPopularNo7.setBounds(36, 208, 65, 65);

        lblColdDrinksPopularNo1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblColdDrinksPopularNo1.setForeground(new java.awt.Color(40, 113, 117));
        lblColdDrinksPopularNo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColdDrinksPopularNo1.setText("jLabel1");
        pnlColdDrinks.add(lblColdDrinksPopularNo1);
        lblColdDrinksPopularNo1.setBounds(19, 6, 100, 16);

        lblColdDrinksPopularNo2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblColdDrinksPopularNo2.setForeground(new java.awt.Color(40, 113, 117));
        lblColdDrinksPopularNo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColdDrinksPopularNo2.setText("jLabel1");
        pnlColdDrinks.add(lblColdDrinksPopularNo2);
        lblColdDrinksPopularNo2.setBounds(125, 6, 100, 16);

        lblColdDrinksPopularNo4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblColdDrinksPopularNo4.setForeground(new java.awt.Color(40, 113, 117));
        lblColdDrinksPopularNo4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColdDrinksPopularNo4.setText("jLabel1");
        pnlColdDrinks.add(lblColdDrinksPopularNo4);
        lblColdDrinksPopularNo4.setBounds(19, 97, 100, 16);

        lblColdDrinksPopularNo5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblColdDrinksPopularNo5.setForeground(new java.awt.Color(40, 113, 117));
        lblColdDrinksPopularNo5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColdDrinksPopularNo5.setText("jLabel1");
        pnlColdDrinks.add(lblColdDrinksPopularNo5);
        lblColdDrinksPopularNo5.setBounds(125, 97, 100, 16);

        lblColdDrinksPopularNo6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblColdDrinksPopularNo6.setForeground(new java.awt.Color(40, 113, 117));
        lblColdDrinksPopularNo6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColdDrinksPopularNo6.setText("jLabel1");
        pnlColdDrinks.add(lblColdDrinksPopularNo6);
        lblColdDrinksPopularNo6.setBounds(231, 97, 100, 16);

        lblColdDrinksPopularNo7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblColdDrinksPopularNo7.setForeground(new java.awt.Color(40, 113, 117));
        lblColdDrinksPopularNo7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColdDrinksPopularNo7.setText("jLabel1");
        pnlColdDrinks.add(lblColdDrinksPopularNo7);
        lblColdDrinksPopularNo7.setBounds(19, 188, 100, 16);

        lblColdDrinksPopularNo8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblColdDrinksPopularNo8.setForeground(new java.awt.Color(40, 113, 117));
        lblColdDrinksPopularNo8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColdDrinksPopularNo8.setText("jLabel1");
        pnlColdDrinks.add(lblColdDrinksPopularNo8);
        lblColdDrinksPopularNo8.setBounds(125, 188, 100, 16);

        lblColdDrinksPopularNo9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblColdDrinksPopularNo9.setForeground(new java.awt.Color(40, 113, 117));
        lblColdDrinksPopularNo9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColdDrinksPopularNo9.setText("jLabel1");
        pnlColdDrinks.add(lblColdDrinksPopularNo9);
        lblColdDrinksPopularNo9.setBounds(231, 188, 100, 16);

        lblColdDrinksPopularNo3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblColdDrinksPopularNo3.setForeground(new java.awt.Color(40, 113, 117));
        lblColdDrinksPopularNo3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColdDrinksPopularNo3.setText("jLabel1");
        pnlColdDrinks.add(lblColdDrinksPopularNo3);
        lblColdDrinksPopularNo3.setBounds(231, 6, 100, 16);

        pnlPopularItems.addTab("Cold Drinks", pnlColdDrinks);

        pnlDonuts.setBackground(new java.awt.Color(255, 200, 163));
        pnlDonuts.setLayout(null);

        btnDonutsPopularNo1.setBackground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnDonutsPopularNo1.setForeground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonutsPopularNo1ActionPerformed(evt);
            }
        });
        pnlDonuts.add(btnDonutsPopularNo1);
        btnDonutsPopularNo1.setBounds(36, 26, 65, 65);

        btnDonutsPopularNo2.setBackground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnDonutsPopularNo2.setForeground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonutsPopularNo2ActionPerformed(evt);
            }
        });
        pnlDonuts.add(btnDonutsPopularNo2);
        btnDonutsPopularNo2.setBounds(142, 26, 65, 65);

        btnDonutsPopularNo3.setBackground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnDonutsPopularNo3.setForeground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonutsPopularNo3ActionPerformed(evt);
            }
        });
        pnlDonuts.add(btnDonutsPopularNo3);
        btnDonutsPopularNo3.setBounds(248, 26, 65, 65);

        btnDonutsPopularNo4.setBackground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnDonutsPopularNo4.setForeground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonutsPopularNo4ActionPerformed(evt);
            }
        });
        pnlDonuts.add(btnDonutsPopularNo4);
        btnDonutsPopularNo4.setBounds(36, 117, 65, 65);

        btnDonutsPopularNo5.setBackground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnDonutsPopularNo5.setForeground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonutsPopularNo5ActionPerformed(evt);
            }
        });
        pnlDonuts.add(btnDonutsPopularNo5);
        btnDonutsPopularNo5.setBounds(142, 117, 65, 65);

        btnDonutsPopularNo6.setBackground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnDonutsPopularNo6.setForeground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonutsPopularNo6ActionPerformed(evt);
            }
        });
        pnlDonuts.add(btnDonutsPopularNo6);
        btnDonutsPopularNo6.setBounds(248, 117, 65, 65);

        btnDonutsPopularNo9.setBackground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnDonutsPopularNo9.setForeground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonutsPopularNo9ActionPerformed(evt);
            }
        });
        pnlDonuts.add(btnDonutsPopularNo9);
        btnDonutsPopularNo9.setBounds(248, 208, 65, 65);

        btnDonutsPopularNo8.setBackground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnDonutsPopularNo8.setForeground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonutsPopularNo8ActionPerformed(evt);
            }
        });
        pnlDonuts.add(btnDonutsPopularNo8);
        btnDonutsPopularNo8.setBounds(142, 208, 65, 65);

        btnDonutsPopularNo7.setBackground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnDonutsPopularNo7.setForeground(new java.awt.Color(40, 113, 117));
        btnDonutsPopularNo7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonutsPopularNo7ActionPerformed(evt);
            }
        });
        pnlDonuts.add(btnDonutsPopularNo7);
        btnDonutsPopularNo7.setBounds(36, 208, 65, 65);

        lblDonutsPopularNo4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblDonutsPopularNo4.setForeground(new java.awt.Color(40, 113, 117));
        lblDonutsPopularNo4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDonutsPopularNo4.setText("jLabel1");
        pnlDonuts.add(lblDonutsPopularNo4);
        lblDonutsPopularNo4.setBounds(19, 97, 100, 16);

        lblDonutsPopularNo5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblDonutsPopularNo5.setForeground(new java.awt.Color(40, 113, 117));
        lblDonutsPopularNo5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDonutsPopularNo5.setText("jLabel1");
        pnlDonuts.add(lblDonutsPopularNo5);
        lblDonutsPopularNo5.setBounds(125, 97, 100, 16);

        lblDonutsPopularNo6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblDonutsPopularNo6.setForeground(new java.awt.Color(40, 113, 117));
        lblDonutsPopularNo6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDonutsPopularNo6.setText("jLabel1");
        pnlDonuts.add(lblDonutsPopularNo6);
        lblDonutsPopularNo6.setBounds(231, 97, 100, 16);

        lblDonutsPopularNo7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblDonutsPopularNo7.setForeground(new java.awt.Color(40, 113, 117));
        lblDonutsPopularNo7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDonutsPopularNo7.setText("jLabel1");
        pnlDonuts.add(lblDonutsPopularNo7);
        lblDonutsPopularNo7.setBounds(19, 188, 100, 16);

        lblDonutsPopularNo8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblDonutsPopularNo8.setForeground(new java.awt.Color(40, 113, 117));
        lblDonutsPopularNo8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDonutsPopularNo8.setText("jLabel1");
        pnlDonuts.add(lblDonutsPopularNo8);
        lblDonutsPopularNo8.setBounds(125, 188, 100, 16);

        lblDonutsPopularNo9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblDonutsPopularNo9.setForeground(new java.awt.Color(40, 113, 117));
        lblDonutsPopularNo9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDonutsPopularNo9.setText("jLabel1");
        pnlDonuts.add(lblDonutsPopularNo9);
        lblDonutsPopularNo9.setBounds(231, 188, 100, 16);

        lblDonutsPopularNo1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblDonutsPopularNo1.setForeground(new java.awt.Color(40, 113, 117));
        lblDonutsPopularNo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDonutsPopularNo1.setText("jLabel1");
        pnlDonuts.add(lblDonutsPopularNo1);
        lblDonutsPopularNo1.setBounds(19, 6, 100, 16);

        lblDonutsPopularNo2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblDonutsPopularNo2.setForeground(new java.awt.Color(40, 113, 117));
        lblDonutsPopularNo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDonutsPopularNo2.setText("jLabel1");
        pnlDonuts.add(lblDonutsPopularNo2);
        lblDonutsPopularNo2.setBounds(125, 6, 100, 16);

        lblDonutsPopularNo3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblDonutsPopularNo3.setForeground(new java.awt.Color(40, 113, 117));
        lblDonutsPopularNo3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDonutsPopularNo3.setText("jLabel1");
        pnlDonuts.add(lblDonutsPopularNo3);
        lblDonutsPopularNo3.setBounds(231, 6, 100, 16);

        pnlPopularItems.addTab("Donuts", pnlDonuts);

        pnlHotFood.setBackground(new java.awt.Color(255, 200, 163));
        pnlHotFood.setLayout(null);

        btnHotFoodPopularNo1.setBackground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnHotFoodPopularNo1.setForeground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotFoodPopularNo1ActionPerformed(evt);
            }
        });
        pnlHotFood.add(btnHotFoodPopularNo1);
        btnHotFoodPopularNo1.setBounds(36, 26, 65, 65);

        btnHotFoodPopularNo2.setBackground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnHotFoodPopularNo2.setForeground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotFoodPopularNo2ActionPerformed(evt);
            }
        });
        pnlHotFood.add(btnHotFoodPopularNo2);
        btnHotFoodPopularNo2.setBounds(142, 26, 65, 65);

        btnHotFoodPopularNo3.setBackground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnHotFoodPopularNo3.setForeground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotFoodPopularNo3ActionPerformed(evt);
            }
        });
        pnlHotFood.add(btnHotFoodPopularNo3);
        btnHotFoodPopularNo3.setBounds(248, 26, 65, 65);

        btnHotFoodPopularNo4.setBackground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnHotFoodPopularNo4.setForeground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotFoodPopularNo4ActionPerformed(evt);
            }
        });
        pnlHotFood.add(btnHotFoodPopularNo4);
        btnHotFoodPopularNo4.setBounds(36, 117, 65, 65);

        btnHotFoodPopularNo5.setBackground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnHotFoodPopularNo5.setForeground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotFoodPopularNo5ActionPerformed(evt);
            }
        });
        pnlHotFood.add(btnHotFoodPopularNo5);
        btnHotFoodPopularNo5.setBounds(142, 117, 65, 65);

        btnHotFoodPopularNo6.setBackground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnHotFoodPopularNo6.setForeground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotFoodPopularNo6ActionPerformed(evt);
            }
        });
        pnlHotFood.add(btnHotFoodPopularNo6);
        btnHotFoodPopularNo6.setBounds(248, 117, 65, 65);

        btnHotFoodPopularNo9.setBackground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnHotFoodPopularNo9.setForeground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotFoodPopularNo9ActionPerformed(evt);
            }
        });
        pnlHotFood.add(btnHotFoodPopularNo9);
        btnHotFoodPopularNo9.setBounds(248, 208, 65, 65);

        btnHotFoodPopularNo8.setBackground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnHotFoodPopularNo8.setForeground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotFoodPopularNo8ActionPerformed(evt);
            }
        });
        pnlHotFood.add(btnHotFoodPopularNo8);
        btnHotFoodPopularNo8.setBounds(142, 208, 65, 65);

        btnHotFoodPopularNo7.setBackground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btnHotFoodPopularNo7.setForeground(new java.awt.Color(40, 113, 117));
        btnHotFoodPopularNo7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotFoodPopularNo7ActionPerformed(evt);
            }
        });
        pnlHotFood.add(btnHotFoodPopularNo7);
        btnHotFoodPopularNo7.setBounds(36, 208, 65, 65);

        lblHotFoodPopularNo1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotFoodPopularNo1.setForeground(new java.awt.Color(40, 113, 117));
        lblHotFoodPopularNo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotFoodPopularNo1.setText("jLabel1");
        pnlHotFood.add(lblHotFoodPopularNo1);
        lblHotFoodPopularNo1.setBounds(19, 6, 100, 16);

        lblHotFoodPopularNo2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotFoodPopularNo2.setForeground(new java.awt.Color(40, 113, 117));
        lblHotFoodPopularNo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotFoodPopularNo2.setText("jLabel1");
        pnlHotFood.add(lblHotFoodPopularNo2);
        lblHotFoodPopularNo2.setBounds(125, 6, 100, 16);

        lblHotFoodPopularNo3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotFoodPopularNo3.setForeground(new java.awt.Color(40, 113, 117));
        lblHotFoodPopularNo3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotFoodPopularNo3.setText("jLabel1");
        pnlHotFood.add(lblHotFoodPopularNo3);
        lblHotFoodPopularNo3.setBounds(231, 6, 100, 16);

        lblHotFoodPopularNo4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotFoodPopularNo4.setForeground(new java.awt.Color(40, 113, 117));
        lblHotFoodPopularNo4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotFoodPopularNo4.setText("jLabel1");
        pnlHotFood.add(lblHotFoodPopularNo4);
        lblHotFoodPopularNo4.setBounds(19, 97, 100, 16);

        lblHotFoodPopularNo5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotFoodPopularNo5.setForeground(new java.awt.Color(40, 113, 117));
        lblHotFoodPopularNo5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotFoodPopularNo5.setText("jLabel1");
        pnlHotFood.add(lblHotFoodPopularNo5);
        lblHotFoodPopularNo5.setBounds(125, 97, 100, 16);

        lblHotFoodPopularNo6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotFoodPopularNo6.setForeground(new java.awt.Color(40, 113, 117));
        lblHotFoodPopularNo6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotFoodPopularNo6.setText("jLabel1");
        pnlHotFood.add(lblHotFoodPopularNo6);
        lblHotFoodPopularNo6.setBounds(231, 97, 100, 16);

        lblHotFoodPopularNo7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotFoodPopularNo7.setForeground(new java.awt.Color(40, 113, 117));
        lblHotFoodPopularNo7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotFoodPopularNo7.setText("jLabel1");
        pnlHotFood.add(lblHotFoodPopularNo7);
        lblHotFoodPopularNo7.setBounds(19, 188, 100, 16);

        lblHotFoodPopularNo8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotFoodPopularNo8.setForeground(new java.awt.Color(40, 113, 117));
        lblHotFoodPopularNo8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotFoodPopularNo8.setText("jLabel1");
        pnlHotFood.add(lblHotFoodPopularNo8);
        lblHotFoodPopularNo8.setBounds(125, 188, 100, 16);

        lblHotFoodPopularNo9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        lblHotFoodPopularNo9.setForeground(new java.awt.Color(40, 113, 117));
        lblHotFoodPopularNo9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHotFoodPopularNo9.setText("jLabel1");
        pnlHotFood.add(lblHotFoodPopularNo9);
        lblHotFoodPopularNo9.setBounds(231, 188, 100, 16);

        pnlPopularItems.addTab("Hot Food", pnlHotFood);

        pnlProducts.add(pnlPopularItems);
        pnlPopularItems.setBounds(10, 20, 350, 321);

        lblSearchbyName.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        lblSearchbyName.setForeground(new java.awt.Color(40, 113, 117));
        lblSearchbyName.setText("Search by product name:");
        pnlProducts.add(lblSearchbyName);
        lblSearchbyName.setBounds(10, 350, 160, 30);

        txtGetProductSearch.setBackground(new java.awt.Color(40, 113, 117));
        txtGetProductSearch.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        txtGetProductSearch.setForeground(new java.awt.Color(255, 255, 255));
        txtGetProductSearch.setSelectedTextColor(new java.awt.Color(105, 189, 194));
        txtGetProductSearch.setSelectionColor(new java.awt.Color(0, 0, 0));
        txtGetProductSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGetProductSearchActionPerformed(evt);
            }
        });
        txtGetProductSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGetProductSearchKeyTyped(evt);
            }
        });
        pnlProducts.add(txtGetProductSearch);
        txtGetProductSearch.setBounds(170, 350, 180, 30);

        tblSearchResults.setBackground(new java.awt.Color(40, 113, 117));
        tblSearchResults.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        tblSearchResults.setForeground(new java.awt.Color(255, 255, 255));
        tblSearchResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSearchResults.setSelectionBackground(new java.awt.Color(105, 189, 194));
        tblSearchResults.setSelectionForeground(new java.awt.Color(0, 0, 0));
        paneResultsTable.setViewportView(tblSearchResults);

        pnlProducts.add(paneResultsTable);
        paneResultsTable.setBounds(10, 390, 350, 150);

        btnSelectProduct.setBackground(new java.awt.Color(0, 153, 0));
        btnSelectProduct.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnSelectProduct.setForeground(new java.awt.Color(0, 0, 0));
        btnSelectProduct.setText("SELECT");
        btnSelectProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectProductActionPerformed(evt);
            }
        });
        pnlProducts.add(btnSelectProduct);
        btnSelectProduct.setBounds(259, 547, 102, 34);

        tabTill.add(pnlProducts);
        pnlProducts.setBounds(10, 10, 370, 590);

        pnlKeyPad.setBackground(new java.awt.Color(255, 200, 163));
        pnlKeyPad.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "KEYPAD", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 1, 12), new java.awt.Color(40, 113, 117))); // NOI18N
        pnlKeyPad.setLayout(null);

        btnKeypadEight.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadEight.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadEight.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadEight.setText("8");
        btnKeypadEight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadEightActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadEight);
        btnKeypadEight.setBounds(90, 50, 50, 50);

        btnKeypadNine.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadNine.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadNine.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadNine.setText("9");
        btnKeypadNine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadNineActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadNine);
        btnKeypadNine.setBounds(150, 50, 50, 50);

        btnKeypadSeven.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadSeven.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadSeven.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadSeven.setText("7");
        btnKeypadSeven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadSevenActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadSeven);
        btnKeypadSeven.setBounds(30, 50, 50, 50);

        btnKeypadFive.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadFive.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadFive.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadFive.setText("5");
        btnKeypadFive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadFiveActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadFive);
        btnKeypadFive.setBounds(90, 110, 50, 50);

        btnKeypadFour.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadFour.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadFour.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadFour.setText("4");
        btnKeypadFour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadFourActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadFour);
        btnKeypadFour.setBounds(30, 110, 50, 50);

        btnKeypadSix.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadSix.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadSix.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadSix.setText("6");
        btnKeypadSix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadSixActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadSix);
        btnKeypadSix.setBounds(150, 110, 50, 50);

        btnKeypadThree.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadThree.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadThree.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadThree.setText("3");
        btnKeypadThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadThreeActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadThree);
        btnKeypadThree.setBounds(150, 170, 50, 50);

        btnKeypadTwo.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadTwo.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadTwo.setText("2");
        btnKeypadTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadTwoActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadTwo);
        btnKeypadTwo.setBounds(90, 170, 50, 50);

        btnKeypadOne.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadOne.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadOne.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadOne.setText("1");
        btnKeypadOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadOneActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadOne);
        btnKeypadOne.setBounds(30, 170, 50, 50);

        btnKeypadHundred.setBackground(new java.awt.Color(255, 255, 0));
        btnKeypadHundred.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadHundred.setForeground(new java.awt.Color(0, 0, 0));
        btnKeypadHundred.setText("00");
        btnKeypadHundred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadHundredActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadHundred);
        btnKeypadHundred.setBounds(150, 230, 50, 50);

        btnKeypadDecimal.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadDecimal.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadDecimal.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadDecimal.setText(".");
        btnKeypadDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadDecimalActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadDecimal);
        btnKeypadDecimal.setBounds(90, 230, 50, 50);

        btnKeypadZero.setBackground(new java.awt.Color(40, 113, 117));
        btnKeypadZero.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadZero.setForeground(new java.awt.Color(255, 255, 255));
        btnKeypadZero.setText("0");
        btnKeypadZero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadZeroActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadZero);
        btnKeypadZero.setBounds(30, 230, 50, 50);

        btnKeypadEnter.setBackground(new java.awt.Color(0, 153, 0));
        btnKeypadEnter.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadEnter.setForeground(new java.awt.Color(0, 0, 0));
        btnKeypadEnter.setText("ENTER");
        btnKeypadEnter.setAutoscrolls(true);
        btnKeypadEnter.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKeypadEnter.setIconTextGap(2);
        btnKeypadEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadEnterActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadEnter);
        btnKeypadEnter.setBounds(210, 170, 72, 112);

        btnKeypadQty.setBackground(new java.awt.Color(255, 255, 0));
        btnKeypadQty.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadQty.setForeground(new java.awt.Color(0, 0, 0));
        btnKeypadQty.setText("QTY");
        btnKeypadQty.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btnKeypadQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadQtyActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadQty);
        btnKeypadQty.setBounds(210, 110, 72, 50);

        btnKeypadClr.setBackground(new java.awt.Color(255, 0, 0));
        btnKeypadClr.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnKeypadClr.setForeground(new java.awt.Color(0, 0, 0));
        btnKeypadClr.setText("CLR");
        btnKeypadClr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeypadClrActionPerformed(evt);
            }
        });
        pnlKeyPad.add(btnKeypadClr);
        btnKeypadClr.setBounds(210, 50, 72, 50);

        tabTill.add(pnlKeyPad);
        pnlKeyPad.setBounds(390, 10, 310, 310);

        pnlTransaction.setBackground(new java.awt.Color(255, 200, 163));
        pnlTransaction.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TRANSACTION", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 1, 12), new java.awt.Color(40, 113, 117))); // NOI18N
        pnlTransaction.setLayout(null);

        listTransaction.setBackground(new java.awt.Color(40, 113, 117));
        listTransaction.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        listTransaction.setForeground(new java.awt.Color(255, 255, 255));
        listTransaction.setSelectionBackground(new java.awt.Color(105, 189, 194));
        listTransaction.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(listTransaction);

        pnlTransaction.add(jScrollPane1);
        jScrollPane1.setBounds(11, 24, 383, 471);

        txtDisplayEntryAndTotal.setEditable(false);
        txtDisplayEntryAndTotal.setBackground(new java.awt.Color(40, 113, 117));
        txtDisplayEntryAndTotal.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        txtDisplayEntryAndTotal.setForeground(new java.awt.Color(255, 255, 255));
        pnlTransaction.add(txtDisplayEntryAndTotal);
        txtDisplayEntryAndTotal.setBounds(11, 499, 383, 30);

        btnScrollDown.setBackground(new java.awt.Color(255, 255, 0));
        btnScrollDown.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnScrollDown.setForeground(new java.awt.Color(0, 0, 0));
        btnScrollDown.setText("DOWN");
        btnScrollDown.setMargin(new java.awt.Insets(2, 3, 2, 3));
        btnScrollDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScrollDownActionPerformed(evt);
            }
        });
        pnlTransaction.add(btnScrollDown);
        btnScrollDown.setBounds(400, 399, 90, 30);

        btnScrollUp.setBackground(new java.awt.Color(255, 255, 0));
        btnScrollUp.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnScrollUp.setForeground(new java.awt.Color(0, 0, 0));
        btnScrollUp.setText("UP");
        btnScrollUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScrollUpActionPerformed(evt);
            }
        });
        pnlTransaction.add(btnScrollUp);
        btnScrollUp.setBounds(400, 363, 90, 30);

        btnVoidSelected.setBackground(new java.awt.Color(255, 0, 0));
        btnVoidSelected.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnVoidSelected.setForeground(new java.awt.Color(0, 0, 0));
        btnVoidSelected.setText("VOID");
        btnVoidSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoidSelectedActionPerformed(evt);
            }
        });
        pnlTransaction.add(btnVoidSelected);
        btnVoidSelected.setBounds(400, 435, 90, 60);

        btnPayCash.setBackground(new java.awt.Color(0, 153, 0));
        btnPayCash.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnPayCash.setForeground(new java.awt.Color(0, 0, 0));
        btnPayCash.setText("PAY CASH");
        btnPayCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayCashActionPerformed(evt);
            }
        });
        pnlTransaction.add(btnPayCash);
        btnPayCash.setBounds(294, 541, 100, 34);

        btnPayCard.setBackground(new java.awt.Color(0, 153, 0));
        btnPayCard.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        btnPayCard.setForeground(new java.awt.Color(0, 0, 0));
        btnPayCard.setText("PAY CARD");
        btnPayCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayCardActionPerformed(evt);
            }
        });
        pnlTransaction.add(btnPayCard);
        btnPayCard.setBounds(182, 541, 100, 34);

        tabTill.add(pnlTransaction);
        pnlTransaction.setBounds(710, 10, 500, 590);

        pnlExtras.setBackground(new java.awt.Color(255, 200, 163));
        pnlExtras.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EXTRAS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 1, 12), new java.awt.Color(40, 113, 117))); // NOI18N
        pnlExtras.setLayout(null);

        btnExtrasDcaf.setBackground(new java.awt.Color(40, 113, 117));
        btnExtrasDcaf.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        btnExtrasDcaf.setForeground(new java.awt.Color(255, 255, 255));
        btnExtrasDcaf.setText("DCAF");
        btnExtrasDcaf.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExtrasDcaf.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnExtrasDcaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtrasDcafActionPerformed(evt);
            }
        });
        pnlExtras.add(btnExtrasDcaf);
        btnExtrasDcaf.setBounds(200, 100, 70, 70);

        btnExtrasSkim.setBackground(new java.awt.Color(40, 113, 117));
        btnExtrasSkim.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        btnExtrasSkim.setForeground(new java.awt.Color(255, 255, 255));
        btnExtrasSkim.setText("SKIM");
        btnExtrasSkim.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExtrasSkim.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnExtrasSkim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtrasSkimActionPerformed(evt);
            }
        });
        pnlExtras.add(btnExtrasSkim);
        btnExtrasSkim.setBounds(120, 20, 70, 70);

        btnExtrasSoya.setBackground(new java.awt.Color(40, 113, 117));
        btnExtrasSoya.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        btnExtrasSoya.setForeground(new java.awt.Color(255, 255, 255));
        btnExtrasSoya.setText("SOYA");
        btnExtrasSoya.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExtrasSoya.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnExtrasSoya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtrasSoyaActionPerformed(evt);
            }
        });
        pnlExtras.add(btnExtrasSoya);
        btnExtrasSoya.setBounds(200, 20, 70, 70);

        btnExtrasAlmond.setBackground(new java.awt.Color(40, 113, 117));
        btnExtrasAlmond.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        btnExtrasAlmond.setForeground(new java.awt.Color(255, 255, 255));
        btnExtrasAlmond.setText("AMOND");
        btnExtrasAlmond.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExtrasAlmond.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnExtrasAlmond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtrasAlmondActionPerformed(evt);
            }
        });
        pnlExtras.add(btnExtrasAlmond);
        btnExtrasAlmond.setBounds(40, 20, 70, 70);

        btnExtrasCaramel.setBackground(new java.awt.Color(40, 113, 117));
        btnExtrasCaramel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        btnExtrasCaramel.setForeground(new java.awt.Color(255, 255, 255));
        btnExtrasCaramel.setText("CARML"); // NOI18N
        btnExtrasCaramel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExtrasCaramel.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnExtrasCaramel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtrasCaramelActionPerformed(evt);
            }
        });
        pnlExtras.add(btnExtrasCaramel);
        btnExtrasCaramel.setBounds(40, 180, 70, 70);

        btnExtrasVinilla.setBackground(new java.awt.Color(40, 113, 117));
        btnExtrasVinilla.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        btnExtrasVinilla.setForeground(new java.awt.Color(255, 255, 255));
        btnExtrasVinilla.setText("VINILLA");
        btnExtrasVinilla.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExtrasVinilla.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnExtrasVinilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtrasVinillaActionPerformed(evt);
            }
        });
        pnlExtras.add(btnExtrasVinilla);
        btnExtrasVinilla.setBounds(40, 100, 70, 70);

        btnExtrasCinnamon.setBackground(new java.awt.Color(40, 113, 117));
        btnExtrasCinnamon.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        btnExtrasCinnamon.setForeground(new java.awt.Color(255, 255, 255));
        btnExtrasCinnamon.setText("CINMN");
        btnExtrasCinnamon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExtrasCinnamon.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnExtrasCinnamon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtrasCinnamonActionPerformed(evt);
            }
        });
        pnlExtras.add(btnExtrasCinnamon);
        btnExtrasCinnamon.setBounds(120, 100, 70, 70);

        btnExtrasPumkin.setBackground(new java.awt.Color(40, 113, 117));
        btnExtrasPumkin.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        btnExtrasPumkin.setForeground(new java.awt.Color(255, 255, 255));
        btnExtrasPumkin.setText("PUMKN");
        btnExtrasPumkin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExtrasPumkin.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnExtrasPumkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtrasPumkinActionPerformed(evt);
            }
        });
        pnlExtras.add(btnExtrasPumkin);
        btnExtrasPumkin.setBounds(120, 180, 70, 70);

        btnExtrasCinnamonGinger.setBackground(new java.awt.Color(40, 113, 117));
        btnExtrasCinnamonGinger.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        btnExtrasCinnamonGinger.setForeground(new java.awt.Color(255, 255, 255));
        btnExtrasCinnamonGinger.setText("GINGER");
        btnExtrasCinnamonGinger.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExtrasCinnamonGinger.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnExtrasCinnamonGinger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtrasCinnamonGingerActionPerformed(evt);
            }
        });
        pnlExtras.add(btnExtrasCinnamonGinger);
        btnExtrasCinnamonGinger.setBounds(200, 180, 70, 70);

        tabTill.add(pnlExtras);
        pnlExtras.setBounds(390, 330, 310, 270);

        pnlMain.addTab("TILL", tabTill);

        tabUser.setBackground(new java.awt.Color(195, 142, 106));
        tabUser.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabUser.setLayout(null);

        pnlCurrentUser.setBackground(new java.awt.Color(255, 200, 163));
        pnlCurrentUser.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CURRENT USER", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semibold", 1, 12), new java.awt.Color(40, 113, 117))); // NOI18N
        pnlCurrentUser.setLayout(null);

        lblEmployeeID.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblEmployeeID.setForeground(new java.awt.Color(40, 113, 117));
        lblEmployeeID.setText("Employee ID: ");
        pnlCurrentUser.add(lblEmployeeID);
        lblEmployeeID.setBounds(287, 50, 393, 25);

        lblEmployeeFirstName.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblEmployeeFirstName.setForeground(new java.awt.Color(40, 113, 117));
        lblEmployeeFirstName.setText("First Name: ");
        pnlCurrentUser.add(lblEmployeeFirstName);
        lblEmployeeFirstName.setBounds(742, 50, 471, 25);

        lblEmployeeLastName.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblEmployeeLastName.setForeground(new java.awt.Color(40, 113, 117));
        lblEmployeeLastName.setText("Last Name: ");
        pnlCurrentUser.add(lblEmployeeLastName);
        lblEmployeeLastName.setBounds(742, 93, 471, 25);

        tblSalesReport.setBackground(new java.awt.Color(40, 113, 117));
        tblSalesReport.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        tblSalesReport.setForeground(new java.awt.Color(255, 255, 255));
        tblSalesReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Total Customers Served", null},
                {"Total Sales", null},
                {"Avarage Sale", null},
                {"Minimum Sale", null},
                {"Maximum Sale Total", null}
            },
            new String [] {
                "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblSalesReport.setRowHeight(75);
        tblSalesReport.setRowSelectionAllowed(false);
        tblSalesReport.setShowGrid(false);
        scrlpSalesReport.setViewportView(tblSalesReport);

        pnlCurrentUser.add(scrlpSalesReport);
        scrlpSalesReport.setBounds(100, 136, 1050, 400);

        btnRefresh.setBackground(new java.awt.Color(40, 113, 117));
        btnRefresh.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        pnlCurrentUser.add(btnRefresh);
        btnRefresh.setBounds(1040, 540, 110, 40);

        tabUser.add(pnlCurrentUser);
        pnlCurrentUser.setBounds(8, 8, 1250, 590);

        pnlMain.addTab("USER", tabUser);

        tabManager.setBackground(new java.awt.Color(195, 142, 106));
        tabManager.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabManager.setLayout(null);

        lblManagerID.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        lblManagerID.setForeground(new java.awt.Color(40, 113, 117));
        lblManagerID.setText("Manager ID: ");
        tabManager.add(lblManagerID);
        lblManagerID.setBounds(120, 40, 410, 32);

        lblManagerFirstName.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        lblManagerFirstName.setForeground(new java.awt.Color(40, 113, 117));
        lblManagerFirstName.setText("First Name: ");
        tabManager.add(lblManagerFirstName);
        lblManagerFirstName.setBounds(580, 40, 270, 32);

        lblManagerLastName.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        lblManagerLastName.setForeground(new java.awt.Color(40, 113, 117));
        lblManagerLastName.setText("Last Name: ");
        tabManager.add(lblManagerLastName);
        lblManagerLastName.setBounds(880, 40, 270, 32);

        pnlUserCRUD.setBackground(new java.awt.Color(255, 200, 163));
        pnlUserCRUD.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlUserCRUD.setForeground(new java.awt.Color(40, 113, 117));
        pnlUserCRUD.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N

        tabCreate.setBackground(new java.awt.Color(255, 200, 163));
        tabCreate.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabCreate.setLayout(null);

        lblGetFirstName.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblGetFirstName.setForeground(new java.awt.Color(40, 113, 117));
        lblGetFirstName.setText("First Name:");
        tabCreate.add(lblGetFirstName);
        lblGetFirstName.setBounds(170, 110, 100, 40);

        txtGetFirstName.setBackground(new java.awt.Color(40, 113, 117));
        txtGetFirstName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtGetFirstName.setForeground(new java.awt.Color(255, 255, 255));
        tabCreate.add(txtGetFirstName);
        txtGetFirstName.setBounds(270, 110, 210, 40);

        txtGetLastName.setBackground(new java.awt.Color(40, 113, 117));
        txtGetLastName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtGetLastName.setForeground(new java.awt.Color(255, 255, 255));
        tabCreate.add(txtGetLastName);
        txtGetLastName.setBounds(610, 110, 210, 40);

        lblGetLastName.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblGetLastName.setForeground(new java.awt.Color(40, 113, 117));
        lblGetLastName.setText("Last Name:");
        tabCreate.add(lblGetLastName);
        lblGetLastName.setBounds(510, 110, 100, 40);

        btnCreatePin.setBackground(new java.awt.Color(40, 113, 117));
        btnCreatePin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCreatePin.setForeground(new java.awt.Color(255, 255, 255));
        btnCreatePin.setText("Create User Pin");
        btnCreatePin.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnCreatePin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePinActionPerformed(evt);
            }
        });
        tabCreate.add(btnCreatePin);
        btnCreatePin.setBounds(341, 160, 180, 40);

        txtGetPin.setBackground(new java.awt.Color(40, 113, 117));
        txtGetPin.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        txtGetPin.setForeground(new java.awt.Color(255, 255, 255));
        txtGetPin.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtGetPin.setEnabled(false);
        tabCreate.add(txtGetPin);
        txtGetPin.setBounds(540, 160, 100, 40);

        btngrpIsManager.add(radManager);
        radManager.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        radManager.setForeground(new java.awt.Color(40, 113, 117));
        radManager.setText("Manager");
        tabCreate.add(radManager);
        radManager.setBounds(400, 210, 110, 29);

        btngrpIsManager.add(radEmployee);
        radEmployee.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        radEmployee.setForeground(new java.awt.Color(40, 113, 117));
        radEmployee.setSelected(true);
        radEmployee.setText("Employee");
        tabCreate.add(radEmployee);
        radEmployee.setBounds(580, 210, 120, 29);

        btnCreateUser.setBackground(new java.awt.Color(40, 113, 117));
        btnCreateUser.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCreateUser.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateUser.setText("Create User");
        btnCreateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateUserActionPerformed(evt);
            }
        });
        tabCreate.add(btnCreateUser);
        btnCreateUser.setBounds(360, 320, 150, 40);

        btnClearCreate.setBackground(new java.awt.Color(40, 113, 117));
        btnClearCreate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnClearCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnClearCreate.setText("Clear All");
        btnClearCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCreateActionPerformed(evt);
            }
        });
        tabCreate.add(btnClearCreate);
        btnClearCreate.setBounds(560, 320, 150, 40);

        pnlUserCRUD.addTab("CREATE", tabCreate);

        tabUpdate.setBackground(new java.awt.Color(255, 200, 163));
        tabUpdate.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabUpdate.setLayout(null);

        btnClearCreateForUpdate.setBackground(new java.awt.Color(40, 113, 117));
        btnClearCreateForUpdate.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        btnClearCreateForUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnClearCreateForUpdate.setText("Clear All");
        btnClearCreateForUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCreateForUpdateActionPerformed(evt);
            }
        });
        tabUpdate.add(btnClearCreateForUpdate);
        btnClearCreateForUpdate.setBounds(560, 320, 150, 40);

        txtGetLastNameForUpdate.setBackground(new java.awt.Color(40, 113, 117));
        txtGetLastNameForUpdate.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        txtGetLastNameForUpdate.setForeground(new java.awt.Color(255, 255, 255));
        tabUpdate.add(txtGetLastNameForUpdate);
        txtGetLastNameForUpdate.setBounds(610, 160, 210, 40);

        lblGetLastName1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblGetLastName1.setForeground(new java.awt.Color(40, 113, 117));
        lblGetLastName1.setText("Last Name:");
        tabUpdate.add(lblGetLastName1);
        lblGetLastName1.setBounds(510, 160, 100, 40);

        btnCreateNewPinForUpdate.setBackground(new java.awt.Color(40, 113, 117));
        btnCreateNewPinForUpdate.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        btnCreateNewPinForUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateNewPinForUpdate.setText("Create New User Pin");
        btnCreateNewPinForUpdate.setAutoscrolls(true);
        btnCreateNewPinForUpdate.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnCreateNewPinForUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewPinForUpdateActionPerformed(evt);
            }
        });
        tabUpdate.add(btnCreateNewPinForUpdate);
        btnCreateNewPinForUpdate.setBounds(287, 210, 240, 40);

        txtGetPinForUpdate.setBackground(new java.awt.Color(40, 113, 117));
        txtGetPinForUpdate.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        txtGetPinForUpdate.setForeground(new java.awt.Color(255, 255, 255));
        txtGetPinForUpdate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtGetPinForUpdate.setEnabled(false);
        tabUpdate.add(txtGetPinForUpdate);
        txtGetPinForUpdate.setBounds(540, 210, 100, 40);

        btngrpIsManagerForUpdate.add(radManagerForUpdate);
        radManagerForUpdate.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        radManagerForUpdate.setForeground(new java.awt.Color(40, 113, 117));
        radManagerForUpdate.setText("Manager");
        tabUpdate.add(radManagerForUpdate);
        radManagerForUpdate.setBounds(400, 260, 110, 29);

        btngrpIsManagerForUpdate.add(radEmployeeForUpdate);
        radEmployeeForUpdate.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        radEmployeeForUpdate.setForeground(new java.awt.Color(40, 113, 117));
        radEmployeeForUpdate.setText("Employee");
        tabUpdate.add(radEmployeeForUpdate);
        radEmployeeForUpdate.setBounds(580, 260, 120, 29);

        lblGetFirstName1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblGetFirstName1.setForeground(new java.awt.Color(40, 113, 117));
        lblGetFirstName1.setText("First Name:");
        tabUpdate.add(lblGetFirstName1);
        lblGetFirstName1.setBounds(170, 160, 100, 40);

        btnUpdateUser.setBackground(new java.awt.Color(40, 113, 117));
        btnUpdateUser.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        btnUpdateUser.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateUser.setText("Update");
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });
        tabUpdate.add(btnUpdateUser);
        btnUpdateUser.setBounds(360, 320, 150, 40);

        txtGetFirstNameForUpdate.setBackground(new java.awt.Color(40, 113, 117));
        txtGetFirstNameForUpdate.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        txtGetFirstNameForUpdate.setForeground(new java.awt.Color(255, 255, 255));
        tabUpdate.add(txtGetFirstNameForUpdate);
        txtGetFirstNameForUpdate.setBounds(270, 160, 210, 40);

        lblSelectUserUpdate.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblSelectUserUpdate.setForeground(new java.awt.Color(40, 113, 117));
        lblSelectUserUpdate.setText("Select User:");
        tabUpdate.add(lblSelectUserUpdate);
        lblSelectUserUpdate.setBounds(290, 80, 100, 40);

        cmboGetEmployeeForUpdate.setBackground(new java.awt.Color(40, 113, 117));
        cmboGetEmployeeForUpdate.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        cmboGetEmployeeForUpdate.setForeground(new java.awt.Color(255, 255, 255));
        cmboGetEmployeeForUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        cmboGetEmployeeForUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboGetEmployeeForUpdateActionPerformed(evt);
            }
        });
        tabUpdate.add(cmboGetEmployeeForUpdate);
        cmboGetEmployeeForUpdate.setBounds(390, 80, 320, 40);

        pnlUserCRUD.addTab("UPDATE", tabUpdate);

        tabDelete.setBackground(new java.awt.Color(255, 200, 163));
        tabDelete.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabDelete.setLayout(null);

        btnClearCreateForDelete.setBackground(new java.awt.Color(40, 113, 117));
        btnClearCreateForDelete.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        btnClearCreateForDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnClearCreateForDelete.setText("Clear All");
        btnClearCreateForDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCreateForDeleteActionPerformed(evt);
            }
        });
        tabDelete.add(btnClearCreateForDelete);
        btnClearCreateForDelete.setBounds(560, 320, 150, 40);

        lblSelectUserForDelete.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblSelectUserForDelete.setForeground(new java.awt.Color(40, 113, 117));
        lblSelectUserForDelete.setText("Select User:");
        tabDelete.add(lblSelectUserForDelete);
        lblSelectUserForDelete.setBounds(290, 80, 100, 40);

        txtGetLastNameForDelete.setEditable(false);
        txtGetLastNameForDelete.setBackground(new java.awt.Color(40, 113, 117));
        txtGetLastNameForDelete.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        txtGetLastNameForDelete.setForeground(new java.awt.Color(255, 255, 255));
        tabDelete.add(txtGetLastNameForDelete);
        txtGetLastNameForDelete.setBounds(610, 170, 210, 40);

        lblGetLastNameForDelete.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblGetLastNameForDelete.setForeground(new java.awt.Color(40, 113, 117));
        lblGetLastNameForDelete.setText("Last Name:");
        tabDelete.add(lblGetLastNameForDelete);
        lblGetLastNameForDelete.setBounds(510, 170, 100, 40);

        cmboGetEmployeeForDelete.setBackground(new java.awt.Color(40, 113, 117));
        cmboGetEmployeeForDelete.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        cmboGetEmployeeForDelete.setForeground(new java.awt.Color(255, 255, 255));
        cmboGetEmployeeForDelete.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        cmboGetEmployeeForDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboGetEmployeeForDeleteActionPerformed(evt);
            }
        });
        tabDelete.add(cmboGetEmployeeForDelete);
        cmboGetEmployeeForDelete.setBounds(390, 80, 320, 40);

        btngrpIsManagerForDelete.add(radManagerForDelete);
        radManagerForDelete.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        radManagerForDelete.setForeground(new java.awt.Color(40, 113, 117));
        radManagerForDelete.setText("Manager");
        radManagerForDelete.setEnabled(false);
        tabDelete.add(radManagerForDelete);
        radManagerForDelete.setBounds(400, 230, 100, 30);

        btngrpIsManagerForDelete.add(radEmployeeForDelete);
        radEmployeeForDelete.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        radEmployeeForDelete.setForeground(new java.awt.Color(40, 113, 117));
        radEmployeeForDelete.setText("Employee");
        radEmployeeForDelete.setEnabled(false);
        tabDelete.add(radEmployeeForDelete);
        radEmployeeForDelete.setBounds(580, 230, 110, 30);

        lblGetFirstNameForDelete.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblGetFirstNameForDelete.setForeground(new java.awt.Color(40, 113, 117));
        lblGetFirstNameForDelete.setText("First Name:");
        tabDelete.add(lblGetFirstNameForDelete);
        lblGetFirstNameForDelete.setBounds(170, 170, 100, 40);

        btnDeleteUser.setBackground(new java.awt.Color(40, 113, 117));
        btnDeleteUser.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        btnDeleteUser.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteUser.setText("Delete");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });
        tabDelete.add(btnDeleteUser);
        btnDeleteUser.setBounds(360, 320, 150, 40);

        txtGetFirstNameForDelete.setEditable(false);
        txtGetFirstNameForDelete.setBackground(new java.awt.Color(40, 113, 117));
        txtGetFirstNameForDelete.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        txtGetFirstNameForDelete.setForeground(new java.awt.Color(255, 255, 255));
        tabDelete.add(txtGetFirstNameForDelete);
        txtGetFirstNameForDelete.setBounds(270, 170, 210, 40);

        pnlUserCRUD.addTab("DELETE", tabDelete);

        tabManager.add(pnlUserCRUD);
        pnlUserCRUD.setBounds(110, 106, 1050, 480);

        pnlMain.addTab("MANAGER", tabManager);

        pnlMainBody.add(pnlMain);
        pnlMain.setBounds(10, 110, 1220, 643);

        pnlHeader.setBackground(new java.awt.Color(117, 78, 52));
        pnlHeader.setLayout(null);

        pnlDateAndUser.setBackground(new java.awt.Color(255, 200, 163));
        pnlDateAndUser.setLayout(null);

        lblHeaderDate.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblHeaderDate.setForeground(new java.awt.Color(40, 113, 117));
        lblHeaderDate.setText("Date: ");
        pnlDateAndUser.add(lblHeaderDate);
        lblHeaderDate.setBounds(40, 20, 146, 25);

        lblHeaderCurrentUser.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        lblHeaderCurrentUser.setForeground(new java.awt.Color(40, 113, 117));
        lblHeaderCurrentUser.setText("Current Employee ID: ");
        pnlDateAndUser.add(lblHeaderCurrentUser);
        lblHeaderCurrentUser.setBounds(230, 20, 261, 25);

        pnlHeader.add(pnlDateAndUser);
        pnlDateAndUser.setBounds(680, 0, 560, 60);

        imgStoreLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imgStoreLogo.setText("LOGO PLACEHOLDER");
        pnlHeader.add(imgStoreLogo);
        imgStoreLogo.setBounds(0, 0, 100, 100);

        lblStoreName.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 48)); // NOI18N
        lblStoreName.setForeground(new java.awt.Color(255, 255, 255));
        lblStoreName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStoreName.setText("Café Java");
        pnlHeader.add(lblStoreName);
        lblStoreName.setBounds(0, 20, 760, 64);

        pnlMainBody.add(pnlHeader);
        pnlHeader.setBounds(0, 0, 1320, 100);

        getContentPane().add(pnlMainBody);
        pnlMainBody.setBounds(0, 0, 1240, 770);

        mnuBar.setBackground(new java.awt.Color(255, 200, 163));
        mnuBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mnuBar.setForeground(new java.awt.Color(40, 113, 117));
        mnuBar.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N

        mnuFile.setText("File");

        mnuStoreTransaction.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuStoreTransaction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/save_icon.png"))); // NOI18N
        mnuStoreTransaction.setText("Store Transaction");
        mnuStoreTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuStoreTransactionActionPerformed(evt);
            }
        });
        mnuFile.add(mnuStoreTransaction);

        mnuStoredTransactions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/stored_icon.png"))); // NOI18N
        mnuStoredTransactions.setText("Stored Transactions");

        mnuStoredTransactionOne.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuStoredTransactionOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/order_icon.png"))); // NOI18N
        mnuStoredTransactionOne.setText("<none>");
        mnuStoredTransactionOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuStoredTransactionOneActionPerformed(evt);
            }
        });
        mnuStoredTransactions.add(mnuStoredTransactionOne);

        mnuStoredTransactionTwo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuStoredTransactionTwo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/order_icon.png"))); // NOI18N
        mnuStoredTransactionTwo.setText("<none>");
        mnuStoredTransactionTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuStoredTransactionTwoActionPerformed(evt);
            }
        });
        mnuStoredTransactions.add(mnuStoredTransactionTwo);

        mnuStoredTransactionThree.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuStoredTransactionThree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/order_icon.png"))); // NOI18N
        mnuStoredTransactionThree.setText("<none>");
        mnuStoredTransactionThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuStoredTransactionThreeActionPerformed(evt);
            }
        });
        mnuStoredTransactions.add(mnuStoredTransactionThree);

        mnuStoredTransactionFour.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuStoredTransactionFour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/order_icon.png"))); // NOI18N
        mnuStoredTransactionFour.setText("<none>");
        mnuStoredTransactionFour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuStoredTransactionFourActionPerformed(evt);
            }
        });
        mnuStoredTransactions.add(mnuStoredTransactionFour);

        mnuStoredTransactionFive.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuStoredTransactionFive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/order_icon.png"))); // NOI18N
        mnuStoredTransactionFive.setText("<none>");
        mnuStoredTransactionFive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuStoredTransactionFiveActionPerformed(evt);
            }
        });
        mnuStoredTransactions.add(mnuStoredTransactionFive);

        mnuFile.add(mnuStoredTransactions);
        mnuFile.add(jSeparator1);

        mnuSeeLastTransaction.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuSeeLastTransaction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/previous_icon.png"))); // NOI18N
        mnuSeeLastTransaction.setText("See Last Transaction");
        mnuSeeLastTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSeeLastTransactionActionPerformed(evt);
            }
        });
        mnuFile.add(mnuSeeLastTransaction);
        mnuFile.add(jSeparator2);

        mnuVoidTransaction.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuVoidTransaction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/void_icon.png"))); // NOI18N
        mnuVoidTransaction.setText("Void Transaction");
        mnuVoidTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuVoidTransactionActionPerformed(evt);
            }
        });
        mnuFile.add(mnuVoidTransaction);
        mnuFile.add(jSeparator3);

        mnuLogout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/signout_icon.png"))); // NOI18N
        mnuLogout.setText("Logout");
        mnuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuLogoutActionPerformed(evt);
            }
        });
        mnuFile.add(mnuLogout);

        mnuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jrp/epos_ui/images/icons/exit_icon.png"))); // NOI18N
        mnuExit.setText("Exit");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuExit);

        mnuBar.add(mnuFile);

        setJMenuBar(mnuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

//=========================GLOBAL==============================================
    //current logged in user
    private Transaction transaction = new Transaction(Login.getCURRENT_USER().getEmployee_id()); //active transaction
    private Product selectedProduct; //selected product

    private boolean transactionActive = false;  //ensures transactions only complete if it is a new active transaction
    private boolean productSelected = false; //For use when checking if an item has been selected before entering 
    private boolean newTransaction = false;  //used to check if a new transaction is begining so the program knows when to clear the transaction log
    private boolean readyForTotal = false; //is the order ready for payment
    private boolean processingCashPayment = false; //used to check if a cash payment has been entered (used when paying in cash)

    private final ArrayList<Transaction> storedTransactions = new ArrayList<Transaction>(); //used to store upto 5 transactions
    private final ArrayList<String> lastTransactionRecipt = new ArrayList<String>(); //stores the last transaction recipt

    private double balanceToPay = 0.00; //holds the balance of the order left to pay
    private double balancePaid = 0.00; // holds the balance paid by the customer

    private int sessionSales = 0;
    private int amount = 1; //amount of items to be selected

    private String storedNumberString = ""; //number stored from keypad

    private static final DefaultListModel listModel = new DefaultListModel(); //model for list
//==============================================================================

//=======================METHODS================================================
    public void setHeaderLogo() {
        //set the loog in the header next to the title

        imgStoreLogo.setText(null);
        String filename = "logo.png";

        ImageIcon imageIcon = new javax.swing.ImageIcon(
                "DATA\\images\\icons\\" + filename
        );
        Image image = imageIcon.getImage();
        Image newimg = image.getScaledInstance(
                imgStoreLogo.getWidth(),
                imgStoreLogo.getHeight(),
                java.awt.Image.SCALE_SMOOTH
        );
        imgStoreLogo.setIcon(new ImageIcon(newimg));
    }

    public void setImage(Product product, JButton img) {

        //getting and resizing button images
        img.setText(null);
        String filename = product.getProduct_image();

        ImageIcon imageIcon = new javax.swing.ImageIcon(
                "DATA\\images\\products\\" + filename
        );
        Image image = imageIcon.getImage();
        Image newimg = image.getScaledInstance(
                img.getWidth() - 10,
                img.getHeight() - 10,
                java.awt.Image.SCALE_SMOOTH
        );
        img.setIcon(new ImageIcon(newimg));
    }

    private void populatePopularProducts() {
        //populate all the popular product buttons
        ArrayList<Catagory> catagories = Catagory.getAll();
        catagories.forEach(catagory -> {

            ArrayList<Product> popularProducts = Product.getPopular(catagory.getCatagory_id());
            if (catagory.getCatagory_id().equals("001")) {
                setImage(popularProducts.get(0), btnHotDrinksPopularNo1);
                lblHotDrinksPopularNo1.setText(popularProducts.get(0).getProduct_id() + ": " + popularProducts.get(0).getProduct_name());
                setImage(popularProducts.get(1), btnHotDrinksPopularNo2);
                lblHotDrinksPopularNo2.setText(popularProducts.get(1).getProduct_id() + ": " + popularProducts.get(1).getProduct_name());
                setImage(popularProducts.get(2), btnHotDrinksPopularNo3);
                lblHotDrinksPopularNo3.setText(popularProducts.get(2).getProduct_id() + ": " + popularProducts.get(2).getProduct_name());
                setImage(popularProducts.get(3), btnHotDrinksPopularNo4);
                lblHotDrinksPopularNo4.setText(popularProducts.get(3).getProduct_id() + ": " + popularProducts.get(3).getProduct_name());
                setImage(popularProducts.get(4), btnHotDrinksPopularNo5);
                lblHotDrinksPopularNo5.setText(popularProducts.get(4).getProduct_id() + ": " + popularProducts.get(4).getProduct_name());
                setImage(popularProducts.get(5), btnHotDrinksPopularNo6);
                lblHotDrinksPopularNo6.setText(popularProducts.get(5).getProduct_id() + ": " + popularProducts.get(5).getProduct_name());
                setImage(popularProducts.get(6), btnHotDrinksPopularNo7);
                lblHotDrinksPopularNo7.setText(popularProducts.get(6).getProduct_id() + ": " + popularProducts.get(6).getProduct_name());
                setImage(popularProducts.get(7), btnHotDrinksPopularNo8);
                lblHotDrinksPopularNo8.setText(popularProducts.get(7).getProduct_id() + ": " + popularProducts.get(7).getProduct_name());
                setImage(popularProducts.get(8), btnHotDrinksPopularNo9);
                lblHotDrinksPopularNo9.setText(popularProducts.get(8).getProduct_id() + ": " + popularProducts.get(8).getProduct_name());
            }
            if (catagory.getCatagory_id().equals("002")) {
                setImage(popularProducts.get(0), btnColdDrinksPopularNo1);
                lblColdDrinksPopularNo1.setText(popularProducts.get(0).getProduct_id() + ": " + popularProducts.get(0).getProduct_name());
                setImage(popularProducts.get(1), btnColdDrinksPopularNo2);
                lblColdDrinksPopularNo2.setText(popularProducts.get(1).getProduct_id() + ": " + popularProducts.get(1).getProduct_name());
                setImage(popularProducts.get(2), btnColdDrinksPopularNo3);
                lblColdDrinksPopularNo3.setText(popularProducts.get(2).getProduct_id() + ": " + popularProducts.get(2).getProduct_name());
                setImage(popularProducts.get(3), btnColdDrinksPopularNo4);
                lblColdDrinksPopularNo4.setText(popularProducts.get(3).getProduct_id() + ": " + popularProducts.get(3).getProduct_name());
                setImage(popularProducts.get(4), btnColdDrinksPopularNo5);
                lblColdDrinksPopularNo5.setText(popularProducts.get(4).getProduct_id() + ": " + popularProducts.get(4).getProduct_name());
                setImage(popularProducts.get(5), btnColdDrinksPopularNo6);
                lblColdDrinksPopularNo6.setText(popularProducts.get(5).getProduct_id() + ": " + popularProducts.get(5).getProduct_name());
                setImage(popularProducts.get(6), btnColdDrinksPopularNo7);
                lblColdDrinksPopularNo7.setText(popularProducts.get(6).getProduct_id() + ": " + popularProducts.get(6).getProduct_name());
                setImage(popularProducts.get(7), btnColdDrinksPopularNo8);
                lblColdDrinksPopularNo8.setText(popularProducts.get(7).getProduct_id() + ": " + popularProducts.get(7).getProduct_name());
                setImage(popularProducts.get(8), btnColdDrinksPopularNo9);
                lblColdDrinksPopularNo9.setText(popularProducts.get(8).getProduct_id() + ": " + popularProducts.get(8).getProduct_name());
            }
            if (catagory.getCatagory_id().equals("003")) {
                setImage(popularProducts.get(0), btnDonutsPopularNo1);
                lblDonutsPopularNo1.setText(popularProducts.get(0).getProduct_id() + ": " + popularProducts.get(0).getProduct_name());
                setImage(popularProducts.get(1), btnDonutsPopularNo2);
                lblDonutsPopularNo2.setText(popularProducts.get(1).getProduct_id() + ": " + popularProducts.get(1).getProduct_name());
                setImage(popularProducts.get(2), btnDonutsPopularNo3);
                lblDonutsPopularNo3.setText(popularProducts.get(2).getProduct_id() + ": " + popularProducts.get(2).getProduct_name());
                setImage(popularProducts.get(3), btnDonutsPopularNo4);
                lblDonutsPopularNo4.setText(popularProducts.get(3).getProduct_id() + ": " + popularProducts.get(3).getProduct_name());
                setImage(popularProducts.get(4), btnDonutsPopularNo5);
                lblDonutsPopularNo5.setText(popularProducts.get(4).getProduct_id() + ": " + popularProducts.get(4).getProduct_name());
                setImage(popularProducts.get(5), btnDonutsPopularNo6);
                lblDonutsPopularNo6.setText(popularProducts.get(5).getProduct_id() + ": " + popularProducts.get(5).getProduct_name());
                setImage(popularProducts.get(6), btnDonutsPopularNo7);
                lblDonutsPopularNo7.setText(popularProducts.get(6).getProduct_id() + ": " + popularProducts.get(6).getProduct_name());
                setImage(popularProducts.get(7), btnDonutsPopularNo8);
                lblDonutsPopularNo8.setText(popularProducts.get(7).getProduct_id() + ": " + popularProducts.get(7).getProduct_name());
                setImage(popularProducts.get(8), btnDonutsPopularNo9);
                lblDonutsPopularNo9.setText(popularProducts.get(8).getProduct_id() + ": " + popularProducts.get(8).getProduct_name());
            }
            if (catagory.getCatagory_id().equals("004")) {
                setImage(popularProducts.get(0), btnHotFoodPopularNo1);
                lblHotFoodPopularNo1.setText(popularProducts.get(0).getProduct_id() + ": " + popularProducts.get(0).getProduct_name());
                setImage(popularProducts.get(1), btnHotFoodPopularNo2);
                lblHotFoodPopularNo2.setText(popularProducts.get(1).getProduct_id() + ": " + popularProducts.get(1).getProduct_name());
                setImage(popularProducts.get(2), btnHotFoodPopularNo3);
                lblHotFoodPopularNo3.setText(popularProducts.get(2).getProduct_id() + ": " + popularProducts.get(2).getProduct_name());
                setImage(popularProducts.get(3), btnHotFoodPopularNo4);
                lblHotFoodPopularNo4.setText(popularProducts.get(3).getProduct_id() + ": " + popularProducts.get(3).getProduct_name());
                setImage(popularProducts.get(4), btnHotFoodPopularNo5);
                lblHotFoodPopularNo5.setText(popularProducts.get(4).getProduct_id() + ": " + popularProducts.get(4).getProduct_name());
                setImage(popularProducts.get(5), btnHotFoodPopularNo6);
                lblHotFoodPopularNo6.setText(popularProducts.get(5).getProduct_id() + ": " + popularProducts.get(5).getProduct_name());
                setImage(popularProducts.get(6), btnHotFoodPopularNo7);
                lblHotFoodPopularNo7.setText(popularProducts.get(6).getProduct_id() + ": " + popularProducts.get(6).getProduct_name());
                setImage(popularProducts.get(7), btnHotFoodPopularNo8);
                lblHotFoodPopularNo8.setText(popularProducts.get(7).getProduct_id() + ": " + popularProducts.get(7).getProduct_name());
                setImage(popularProducts.get(8), btnHotFoodPopularNo9);
                lblHotFoodPopularNo9.setText(popularProducts.get(8).getProduct_id() + ": " + popularProducts.get(8).getProduct_name());
            }
        });
    }

    private void populateSavedTransactionsMenu() {
        //Save current transaction to the 'saved transactions' menu

        //get date to add to the menu name
        var formatter = new SimpleDateFormat("dd-MM-yyyy hh:mm");
        Date date = new Date();

        switch (storedTransactions.size()) {
            case 0 -> { //if there are no saved transactions clear the menu
                mnuStoredTransactionOne.setText("<none>");
                mnuStoredTransactionTwo.setText("<none>");
                mnuStoredTransactionThree.setText("<none>");
                mnuStoredTransactionFour.setText("<none>");
                mnuStoredTransactionFive.setText("<none>");
            }
            case 1 -> { //one saved transaction
                mnuStoredTransactionOne.setText("Stored Transaction 1" + " : " + formatter.format(date));
                mnuStoredTransactionTwo.setText("<none>");
                mnuStoredTransactionThree.setText("<none>");
                mnuStoredTransactionFour.setText("<none>");
                mnuStoredTransactionFive.setText("<none>");
            }
            case 2 -> { //two saved transactions
                mnuStoredTransactionOne.setText("Stored Transaction 1" + " : " + formatter.format(date));
                mnuStoredTransactionTwo.setText("Stored Transaction 2" + " : " + formatter.format(date));
                mnuStoredTransactionThree.setText("<none>");
                mnuStoredTransactionFour.setText("<none>");
                mnuStoredTransactionFive.setText("<none>");
            }
            case 3 -> { //three saved transactions
                mnuStoredTransactionOne.setText("Stored Transaction 1" + " : " + formatter.format(date));
                mnuStoredTransactionTwo.setText("Stored Transaction 2" + " : " + formatter.format(date));
                mnuStoredTransactionThree.setText("Stored Transaction 3" + " : " + formatter.format(date));
                mnuStoredTransactionFour.setText("<none>");
                mnuStoredTransactionFive.setText("<none>");
            }
            case 4 -> { //four saved transactions
                mnuStoredTransactionOne.setText("Stored Transaction 1" + " : " + formatter.format(date));
                mnuStoredTransactionTwo.setText("Stored Transaction 2" + " : " + formatter.format(date));
                mnuStoredTransactionThree.setText("Stored Transaction 3" + " : " + formatter.format(date));
                mnuStoredTransactionFour.setText("Stored Transaction 4" + " : " + formatter.format(date));
                mnuStoredTransactionFive.setText("<none>");
            }
            case 5 -> { //five saved transactions
                mnuStoredTransactionOne.setText("Stored Transaction 1" + " : " + formatter.format(date));
                mnuStoredTransactionTwo.setText("Stored Transaction 2" + " : " + formatter.format(date));
                mnuStoredTransactionThree.setText("Stored Transaction 3" + " : " + formatter.format(date));
                mnuStoredTransactionFour.setText("Stored Transaction 4" + " : " + formatter.format(date));
                mnuStoredTransactionFive.setText("Stored Transaction 5" + " : " + formatter.format(date));
            }
        }
    }

    private void processProduct(String id) {
        //add the product selected and the amount to the transaction and display the information in the textBox for review

        if (newTransaction) {   //if it is a new transaction clear the previous transaction
            listModel.clear();
            newTransaction = false;
        }
        selectedProduct = new Product(id);

        if (Product.isValid(selectedProduct)) {
            selectedProduct = Product.getValid(selectedProduct);
            productSelected = true;
            transactionActive = true;
            txtDisplayEntryAndTotal.setText(amount + " X " + selectedProduct.getProduct_name() + " @ £" + selectedProduct.getProduct_cost());
        }
        readyForTotal = false;
    }

    private void addExtra(String id) {
        //Add any items selected from the extra choices to the current selected item.

        Product extra = new Product(id);
        extra = Product.getValid(extra);
        selectedProduct.addExtra(extra);
        selectedProduct.setProduct_name("(" + extra.getProduct_name() + ") " + selectedProduct.getProduct_name());
        txtDisplayEntryAndTotal.setText("(" + extra.getProduct_name() + ") " + " " + txtDisplayEntryAndTotal.getText());
    }

    @SuppressWarnings("unchecked")
    public void populateTransactionList(Transaction transaction) {
        //add selected items to the transaction List

        listModel.clear();
        transaction.getItems().forEach(item -> {
            listModel.addElement(item.getAmount() + " X " + item.getProduct().getProduct_name() + " @ £" + item.getProduct().getProduct_cost());
        });
    }

    private void newTransaction() {
        //reset alll values to start a new transaction

        lastTransactionRecipt.clear();
        saveLastTransactionRecipt();
        transactionActive = false;
        transaction = new Transaction(Login.getCURRENT_USER().getEmployee_id());
        newTransaction = true;
        balancePaid = 0.00;
        updateSalesReport();
        processingCashPayment = false;
    }

    private void updateSalesReport() {
        //update all the values in the sales report for the current user
        tblSalesReport.setValueAt(Login.getCURRENT_USER().getCustomers_served(), 0, 1);
        tblSalesReport.setValueAt(sessionSales, 1, 1);
        tblSalesReport.setValueAt("£" + String.format("%.2f", Employee.getAvarageSale(Login.getCURRENT_USER().getEmployee_id())), 2, 1);
        tblSalesReport.setValueAt("£" + Employee.getMinSale(Login.getCURRENT_USER().getEmployee_id()), 3, 1);
        tblSalesReport.setValueAt("£" + Employee.getMaxSale(Login.getCURRENT_USER().getEmployee_id()), 4, 1);
    }

    private boolean checkPin(String pin) {
        try {
            Integer.parseInt(pin);
            return true;
        } catch (NumberFormatException e) {
            new Dialog_OK_UI(
                    this, true,
                    "Pin Error",
                    "Invalid Pin Entered").setVisible(true);
            return false;
        }
    }

    public void clearCRUD() {
        //Clear the crud values

        cmboGetEmployeeForUpdate.setSelectedIndex(0);
        cmboGetEmployeeForDelete.setSelectedIndex(0);
        txtGetFirstName.setText("");
        txtGetFirstNameForUpdate.setText("");
        txtGetFirstNameForDelete.setText("");
        txtGetLastName.setText("");
        txtGetLastNameForUpdate.setText("");
        txtGetLastNameForDelete.setText("");
        txtGetPin.setText("");
        txtGetPinForUpdate.setText("");
        radEmployee.setSelected(true);
        radEmployeeForUpdate.setSelected(true);
        radEmployeeForDelete.setSelected(false);
        radManagerForDelete.setSelected(false);
    }

    public void saveLastTransactionRecipt() {
        //saves the transaction list values to an array in order to be printed if requested.

        System.out.println("+----------------------------------------------+");
        for (int i = 0; i < listModel.getSize(); i++) {
            String row = listModel.get(i).toString();
            lastTransactionRecipt.add(row);
            System.out.println("| " + row);
        }
        System.out.println("+----------------------------------------------+\n\n");
    }
//==============================================================================
//=============================WINDOW OPENS=====================================

    @SuppressWarnings("unchecked")
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        setHeaderLogo();
        Product.tallySales();
        populatePopularProducts();

        var formatter = new SimpleDateFormat("dd-MM-yyyy");
        Date date = new Date();

        updateSalesReport();

        if (!Login.getCURRENT_USER().isEmployee_is_manager()) { //if the current user is not a manager hide the manager tab
            pnlMain.remove(tabManager);

        } else {
            //if the user is a manager populate the managfer info in the manager tab
            lblManagerID.setText("Current Employee ID: " + Login.getCURRENT_USER().getEmployee_id());
            lblManagerFirstName.setText("First Name: " + Login.getCURRENT_USER().getEmployee_first_name());
            lblManagerLastName.setText("Last Name: " + Login.getCURRENT_USER().getEmployee_last_name());
        }
        //populate the header information
        lblHeaderCurrentUser.setText("Current Employee ID: " + Login.getCURRENT_USER().getEmployee_id());
        lblHeaderDate.setText("Date: " + formatter.format(date));

        //populate the current user information in the sales report
        lblEmployeeID.setText("Current Employee ID: " + Login.getCURRENT_USER().getEmployee_id());
        lblEmployeeFirstName.setText("First Name: " + Login.getCURRENT_USER().getEmployee_first_name());
        lblEmployeeLastName.setText("Last Name: " + Login.getCURRENT_USER().getEmployee_last_name());

        listTransaction.setModel(listModel);    //set the model for the transaction list

        //get all meploy preview for combo boxes.
        populateComboBoxes(cmboGetEmployeeForUpdate, cmboGetEmployeeForDelete);
    }//GEN-LAST:event_formWindowOpened
//==============================================================================

//=============================MENU ITEMS=======================================    
    @SuppressWarnings("unchecked")
    private void mnuStoreTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuStoreTransactionActionPerformed
        //store the current transaction (maximum of 5)
        if (!transaction.getItems().isEmpty()) {

            listModel.addElement("  (TRANSACTION STORED)  ");

            if (storedTransactions.size() < 5) {

                storedTransactions.add(transaction);
                newTransaction();

            } else {
                //if there are already five delete the oldest transaction and store the current,
                storedTransactions.remove(0);
                storedTransactions.add(transaction);
                newTransaction();
            }
            populateSavedTransactionsMenu();
        } else {
            new Dialog_OK_UI(
                    this, true,
                    "Transaction Error",
                    "No Transaction Started"
            ).setVisible(true);
        }
    }//GEN-LAST:event_mnuStoreTransactionActionPerformed

    @SuppressWarnings("unchecked")
    private void mnuSeeLastTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSeeLastTransactionActionPerformed
        //Display the last transaction.

        System.out.println("+----------------------------------------------+");
        newTransaction = true;
        lastTransactionRecipt.forEach(row -> {
            listModel.addElement(row);
            System.out.println("| " + row);
        });
        System.out.println("+----------------------------------------------+\n\n");
    }//GEN-LAST:event_mnuSeeLastTransactionActionPerformed

    @SuppressWarnings("unchecked")
    private void mnuVoidTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuVoidTransactionActionPerformed
        //void the current transaction.
        if (transactionActive) {
            listModel.addElement(" ");
            listModel.addElement("  (TRANSACTION VOID)  ");
            newTransaction();
        }
    }//GEN-LAST:event_mnuVoidTransactionActionPerformed

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        //exit the application.
        System.exit(0);
    }//GEN-LAST:event_mnuExitActionPerformed

    private void mnuStoredTransactionOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuStoredTransactionOneActionPerformed
        //retrieve stored transaction and rempve it from storage
        try {
            int index = 0;
            transaction = storedTransactions.get(index);
            transaction.checkID();
            transactionActive = true;
            populateTransactionList(transaction);
            storedTransactions.remove(index);
            populateSavedTransactionsMenu();

        } catch (IndexOutOfBoundsException e) {
            new Dialog_OK_UI(
                    this, true,
                    "Transaction Error",
                    "No Transaction Found"
            ).setVisible(true);
        }
    }//GEN-LAST:event_mnuStoredTransactionOneActionPerformed

    private void mnuStoredTransactionTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuStoredTransactionTwoActionPerformed
        try {
            int index = 1;
            transaction = storedTransactions.get(index);
            transaction.checkID();
            transactionActive = true;
            populateTransactionList(transaction);
            storedTransactions.remove(index);
            populateSavedTransactionsMenu();
        } catch (IndexOutOfBoundsException e) {
            new Dialog_OK_UI(
                    this, true,
                    "Transaction Error",
                    "No Transaction Found"
            ).setVisible(true);
        }
    }//GEN-LAST:event_mnuStoredTransactionTwoActionPerformed

    private void mnuStoredTransactionThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuStoredTransactionThreeActionPerformed
        //retrieve stored transaction and rempve it from storage
        try {
            int index = 2;
            transaction = storedTransactions.get(index);
            transaction.checkID();
            transactionActive = true;
            populateTransactionList(transaction);
            storedTransactions.remove(index);
            populateSavedTransactionsMenu();
        } catch (IndexOutOfBoundsException e) {
            new Dialog_OK_UI(
                    this, true,
                    "Transaction Error",
                    "No Transaction Found"
            ).setVisible(true);
        }
    }//GEN-LAST:event_mnuStoredTransactionThreeActionPerformed

    private void mnuStoredTransactionFourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuStoredTransactionFourActionPerformed
        //retrieve stored transaction and rempve it from storage
        try {
            int index = 3;
            transaction = storedTransactions.get(index);
            transaction.checkID();
            transactionActive = true;
            populateTransactionList(transaction);
            storedTransactions.remove(index);
            populateSavedTransactionsMenu();
        } catch (IndexOutOfBoundsException e) {
            new Dialog_OK_UI(
                    this, true,
                    "Transaction Error",
                    "No Transaction Found"
            ).setVisible(true);
        }
    }//GEN-LAST:event_mnuStoredTransactionFourActionPerformed

    private void mnuStoredTransactionFiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuStoredTransactionFiveActionPerformed
        //retrieve stored transaction and rempve it from storage
        try {
            int index = 4;
            transaction = storedTransactions.get(index);
            transaction.checkID();
            transactionActive = true;
            populateTransactionList(transaction);
            storedTransactions.remove(index);
            populateSavedTransactionsMenu();
        } catch (IndexOutOfBoundsException e) {
            new Dialog_OK_UI(
                    this, true,
                    "Transaction Error",
                    "No Transaction Found"
            ).setVisible(true);
        }
    }//GEN-LAST:event_mnuStoredTransactionFiveActionPerformed
//==============================================================================

//===========================KEYPAD=============================================
    //adds the value of the key pressed to a number 'STRING' to be used with other commands
    private void btnKeypadZeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadZeroActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "0";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "0";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "0");
        }
    }//GEN-LAST:event_btnKeypadZeroActionPerformed

    private void btnKeypadOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadOneActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "1";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "1";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "1");
        }
    }//GEN-LAST:event_btnKeypadOneActionPerformed

    private void btnKeypadTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadTwoActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "2";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "2";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "2");
        }
    }//GEN-LAST:event_btnKeypadTwoActionPerformed

    private void btnKeypadThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadThreeActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "3";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "3";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "3");
        }
    }//GEN-LAST:event_btnKeypadThreeActionPerformed

    private void btnKeypadFourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadFourActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "4";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "4";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "4");
        }
    }//GEN-LAST:event_btnKeypadFourActionPerformed

    private void btnKeypadFiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadFiveActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "5";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "5";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "5");
        }
    }//GEN-LAST:event_btnKeypadFiveActionPerformed

    private void btnKeypadSixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadSixActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "6";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "6";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "6");
        }
    }//GEN-LAST:event_btnKeypadSixActionPerformed

    private void btnKeypadSevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadSevenActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "7";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "7";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "7");
        }
    }//GEN-LAST:event_btnKeypadSevenActionPerformed

    private void btnKeypadEightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadEightActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "8";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "8";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "8");
        }
    }//GEN-LAST:event_btnKeypadEightActionPerformed

    private void btnKeypadNineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadNineActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "9";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "9";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "9");
        }
    }//GEN-LAST:event_btnKeypadNineActionPerformed

    private void btnKeypadDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadDecimalActionPerformed
        if (!processingCashPayment) {
            storedNumberString += ".";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += ".";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + ".");
        }
    }//GEN-LAST:event_btnKeypadDecimalActionPerformed

    private void btnKeypadHundredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadHundredActionPerformed
        if (!processingCashPayment) {
            storedNumberString += "00";
            txtDisplayEntryAndTotal.setText(storedNumberString);
        }
        if (processingCashPayment) {
            storedNumberString += "00";
            txtDisplayEntryAndTotal.setText(txtDisplayEntryAndTotal.getText() + "00");
        }
    }//GEN-LAST:event_btnKeypadHundredActionPerformed

    //Takes the number string and uses it as the quantity of the next product selected.
    private void btnKeypadQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadQtyActionPerformed
        try {
            if (!processingCashPayment) {
                amount = Integer.parseInt(storedNumberString);
                storedNumberString = "";
            }
        } catch (NumberFormatException e) {
            new Dialog_OK_UI(
                    this, true,
                    "Quantity Error",
                    "No Amount Selected"
            ).setVisible(true);
        }
    }//GEN-LAST:event_btnKeypadQtyActionPerformed

    //finalises selection
    @SuppressWarnings("unchecked")
    private void btnKeypadEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadEnterActionPerformed
        if (newTransaction) {   //if its a new transaction clear the last one
            listModel.clear();
            newTransaction = false;
        }
        if (!readyForTotal && productSelected) {
            //if Product selected add it to the transaction
            listModel.addElement(amount + " X " + selectedProduct.getProduct_name() + " @ £" + selectedProduct.getProduct_cost());
            transaction.addItem(new TransactionItem(selectedProduct, amount));

            //set the amount to 1 if a larger quantity was set last product
            amount = 1;
            txtDisplayEntryAndTotal.setText("");
            selectedProduct = null;
            transaction.calculateTotal();
            readyForTotal = true;

        } else if (readyForTotal && !transaction.getItems().isEmpty()) {
            //if no product selected and the transaction has an item selected show total in the txt display.
            txtDisplayEntryAndTotal.setText("Total To Pay = £" + String.format("%.2f", transaction.getTotal()));
            amount = 1;
        }
    }//GEN-LAST:event_btnKeypadEnterActionPerformed

    private void btnKeypadClrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeypadClrActionPerformed
        //clear all product selection
        if (newTransaction) {   //if its a new transaction clear the last one
            listModel.clear();
            newTransaction = false;
        }
        if (!processingCashPayment) {
            storedNumberString = "";
            amount = 1;
            txtDisplayEntryAndTotal.setText("");
            readyForTotal = true;
            selectedProduct = new Product();
        }
        if (processingCashPayment) {
            txtDisplayEntryAndTotal.setText("Cash Paid = £");
            storedNumberString = "";
        }
        if (transaction.getItems().isEmpty()) {
            transactionActive = false;
        }
    }//GEN-LAST:event_btnKeypadClrActionPerformed
//==============================================================================

//===============================POPULARE HOT DRINKS============================
    //Add the selected product to the current selection
    private void btnHotDrinksPopularNo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotDrinksPopularNo1ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotDrinksPopularNo1.getText().substring(0, lblHotDrinksPopularNo1.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotDrinksPopularNo1ActionPerformed

    private void btnHotDrinksPopularNo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotDrinksPopularNo2ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotDrinksPopularNo2.getText().substring(0, lblHotDrinksPopularNo2.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotDrinksPopularNo2ActionPerformed

    private void btnHotDrinksPopularNo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotDrinksPopularNo3ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotDrinksPopularNo3.getText().substring(0, lblHotDrinksPopularNo3.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotDrinksPopularNo3ActionPerformed

    private void btnHotDrinksPopularNo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotDrinksPopularNo4ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotDrinksPopularNo4.getText().substring(0, lblHotDrinksPopularNo4.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotDrinksPopularNo4ActionPerformed

    private void btnHotDrinksPopularNo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotDrinksPopularNo5ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotDrinksPopularNo5.getText().substring(0, lblHotDrinksPopularNo5.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotDrinksPopularNo5ActionPerformed

    private void btnHotDrinksPopularNo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotDrinksPopularNo6ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotDrinksPopularNo6.getText().substring(0, lblHotDrinksPopularNo6.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotDrinksPopularNo6ActionPerformed

    private void btnHotDrinksPopularNo7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotDrinksPopularNo7ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotDrinksPopularNo7.getText().substring(0, lblHotDrinksPopularNo7.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotDrinksPopularNo7ActionPerformed

    private void btnHotDrinksPopularNo8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotDrinksPopularNo8ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotDrinksPopularNo8.getText().substring(0, lblHotDrinksPopularNo8.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotDrinksPopularNo8ActionPerformed

    private void btnHotDrinksPopularNo9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotDrinksPopularNo9ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotDrinksPopularNo9.getText().substring(0, lblHotDrinksPopularNo9.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotDrinksPopularNo9ActionPerformed
//==============================================================================

//===========================POPULAR COLD DRINKS================================   
    //Add the selected product to the current selection
    private void btnColdDrinksPopularNo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColdDrinksPopularNo1ActionPerformed
        if (!processingCashPayment) {
            String id = lblColdDrinksPopularNo1.getText().substring(0, lblColdDrinksPopularNo1.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnColdDrinksPopularNo1ActionPerformed

    private void btnColdDrinksPopularNo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColdDrinksPopularNo2ActionPerformed
        if (!processingCashPayment) {
            String id = lblColdDrinksPopularNo2.getText().substring(0, lblColdDrinksPopularNo2.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnColdDrinksPopularNo2ActionPerformed

    private void btnColdDrinksPopularNo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColdDrinksPopularNo3ActionPerformed
        if (!processingCashPayment) {
            String id = lblColdDrinksPopularNo3.getText().substring(0, lblColdDrinksPopularNo3.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnColdDrinksPopularNo3ActionPerformed

    private void btnColdDrinksPopularNo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColdDrinksPopularNo4ActionPerformed
        if (!processingCashPayment) {
            String id = lblColdDrinksPopularNo4.getText().substring(0, lblColdDrinksPopularNo4.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnColdDrinksPopularNo4ActionPerformed

    private void btnColdDrinksPopularNo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColdDrinksPopularNo5ActionPerformed
        if (!processingCashPayment) {
            String id = lblColdDrinksPopularNo5.getText().substring(0, lblColdDrinksPopularNo5.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnColdDrinksPopularNo5ActionPerformed

    private void btnColdDrinksPopularNo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColdDrinksPopularNo6ActionPerformed
        if (!processingCashPayment) {
            String id = lblColdDrinksPopularNo6.getText().substring(0, lblColdDrinksPopularNo6.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnColdDrinksPopularNo6ActionPerformed

    private void btnColdDrinksPopularNo7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColdDrinksPopularNo7ActionPerformed
        if (!processingCashPayment) {
            String id = lblColdDrinksPopularNo7.getText().substring(0, lblColdDrinksPopularNo7.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnColdDrinksPopularNo7ActionPerformed

    private void btnColdDrinksPopularNo8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColdDrinksPopularNo8ActionPerformed
        if (!processingCashPayment) {
            String id = lblColdDrinksPopularNo8.getText().substring(0, lblColdDrinksPopularNo8.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnColdDrinksPopularNo8ActionPerformed

    private void btnColdDrinksPopularNo9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColdDrinksPopularNo9ActionPerformed
        if (!processingCashPayment) {
            String id = lblColdDrinksPopularNo9.getText().substring(0, lblColdDrinksPopularNo9.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnColdDrinksPopularNo9ActionPerformed
//==============================================================================

//==========================POPULAR DONUTS======================================   
    //Add the selected product to the current selection
    private void btnDonutsPopularNo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonutsPopularNo1ActionPerformed
        if (!processingCashPayment) {
            String id = lblDonutsPopularNo1.getText().substring(0, lblDonutsPopularNo1.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnDonutsPopularNo1ActionPerformed

    private void btnDonutsPopularNo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonutsPopularNo2ActionPerformed
        if (!processingCashPayment) {
            String id = lblDonutsPopularNo2.getText().substring(0, lblDonutsPopularNo2.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnDonutsPopularNo2ActionPerformed

    private void btnDonutsPopularNo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonutsPopularNo3ActionPerformed
        if (!processingCashPayment) {
            String id = lblDonutsPopularNo3.getText().substring(0, lblDonutsPopularNo3.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnDonutsPopularNo3ActionPerformed

    private void btnDonutsPopularNo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonutsPopularNo4ActionPerformed
        if (!processingCashPayment) {
            String id = lblDonutsPopularNo4.getText().substring(0, lblDonutsPopularNo4.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnDonutsPopularNo4ActionPerformed

    private void btnDonutsPopularNo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonutsPopularNo5ActionPerformed
        if (!processingCashPayment) {
            String id = lblDonutsPopularNo5.getText().substring(0, lblDonutsPopularNo5.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnDonutsPopularNo5ActionPerformed

    private void btnDonutsPopularNo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonutsPopularNo6ActionPerformed
        if (!processingCashPayment) {
            String id = lblDonutsPopularNo6.getText().substring(0, lblDonutsPopularNo6.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnDonutsPopularNo6ActionPerformed

    private void btnDonutsPopularNo7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonutsPopularNo7ActionPerformed
        if (!processingCashPayment) {
            String id = lblDonutsPopularNo7.getText().substring(0, lblDonutsPopularNo7.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnDonutsPopularNo7ActionPerformed

    private void btnDonutsPopularNo8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonutsPopularNo8ActionPerformed
        if (!processingCashPayment) {
            String id = lblDonutsPopularNo8.getText().substring(0, lblDonutsPopularNo8.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnDonutsPopularNo8ActionPerformed

    private void btnDonutsPopularNo9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonutsPopularNo9ActionPerformed
        if (!processingCashPayment) {
            String id = lblDonutsPopularNo9.getText().substring(0, lblDonutsPopularNo9.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnDonutsPopularNo9ActionPerformed
//==============================================================================

//============================POPULAR HOT FOOD================================== 
    //Add the selected product to the current selection
    private void btnHotFoodPopularNo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotFoodPopularNo1ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotFoodPopularNo1.getText().substring(0, lblHotFoodPopularNo1.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotFoodPopularNo1ActionPerformed

    private void btnHotFoodPopularNo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotFoodPopularNo2ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotFoodPopularNo2.getText().substring(0, lblHotFoodPopularNo2.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotFoodPopularNo2ActionPerformed

    private void btnHotFoodPopularNo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotFoodPopularNo3ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotFoodPopularNo3.getText().substring(0, lblHotFoodPopularNo3.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotFoodPopularNo3ActionPerformed

    private void btnHotFoodPopularNo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotFoodPopularNo4ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotFoodPopularNo4.getText().substring(0, lblHotFoodPopularNo4.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotFoodPopularNo4ActionPerformed

    private void btnHotFoodPopularNo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotFoodPopularNo5ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotFoodPopularNo5.getText().substring(0, lblHotFoodPopularNo5.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotFoodPopularNo5ActionPerformed

    private void btnHotFoodPopularNo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotFoodPopularNo6ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotFoodPopularNo6.getText().substring(0, lblHotFoodPopularNo6.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotFoodPopularNo6ActionPerformed

    private void btnHotFoodPopularNo7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotFoodPopularNo7ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotFoodPopularNo7.getText().substring(0, lblHotFoodPopularNo7.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotFoodPopularNo7ActionPerformed

    private void btnHotFoodPopularNo8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotFoodPopularNo8ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotFoodPopularNo8.getText().substring(0, lblHotFoodPopularNo8.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotFoodPopularNo8ActionPerformed

    private void btnHotFoodPopularNo9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotFoodPopularNo9ActionPerformed
        if (!processingCashPayment) {
            String id = lblHotFoodPopularNo9.getText().substring(0, lblHotFoodPopularNo9.getText().indexOf(":"));
            processProduct(id);
        }
    }//GEN-LAST:event_btnHotFoodPopularNo9ActionPerformed
//==============================================================================

//============================SEARCH PRODUCTS BY NAME===========================
    private void txtGetProductSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGetProductSearchActionPerformed
        //used to search for a product from the entire menu.
        //searches when pressing [ENTER]

        String searchFor = txtGetProductSearch.getText();
        DefaultTableModel model = (DefaultTableModel) tblSearchResults.getModel();
        model.getDataVector().removeAllElements();
        ArrayList<Product> searchResults = Product.searchFor(searchFor);
        for (Product product : searchResults) {
            Object[] row = {product.getProduct_name(), product.getProduct_cost()};
            model.addRow(row);
        }
        if (searchFor.equals("")) {
            model.getDataVector().removeAllElements();
        }
    }//GEN-LAST:event_txtGetProductSearchActionPerformed

    private void txtGetProductSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGetProductSearchKeyTyped
        //used to search for a product from the entire menu.
        //searches while you type

        String searchFor = txtGetProductSearch.getText();
        DefaultTableModel model = (DefaultTableModel) tblSearchResults.getModel();
        model.getDataVector().removeAllElements();

        ArrayList<Product> searchResults = Product.searchFor(searchFor);
        for (Product product : searchResults) {
            Object[] row = {product.getProduct_id() + ": " + product.getProduct_name(), product.getProduct_cost()};
            model.addRow(row);
        }
        if (searchFor.equals("")) {
            model.getDataVector().removeAllElements();
        }
    }//GEN-LAST:event_txtGetProductSearchKeyTyped

    private void btnSelectProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectProductActionPerformed
        //add the selected product from the search to the current selected product for the transaction
        if (tblSearchResults.getSelectedRow() != -1) {
            String selectedItem = (String) tblSearchResults.getValueAt(tblSearchResults.getSelectedRow(), 0);
            String productID = selectedItem.substring(0, selectedItem.indexOf(":"));
            processProduct(productID);
        }
    }//GEN-LAST:event_btnSelectProductActionPerformed
//==============================================================================

//=============================EXTRAS===========================================
    //Add the selected product to the current selection
    private void btnExtrasDcafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtrasDcafActionPerformed
        if (productSelected) {
            String id = "063";
            addExtra(id);
        }
    }//GEN-LAST:event_btnExtrasDcafActionPerformed

    private void btnExtrasSkimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtrasSkimActionPerformed
        if (productSelected) {
            String id = "064";
            addExtra(id);
        }
    }//GEN-LAST:event_btnExtrasSkimActionPerformed

    private void btnExtrasSoyaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtrasSoyaActionPerformed
        if (productSelected) {
            String id = "065";
            addExtra(id);
        }
    }//GEN-LAST:event_btnExtrasSoyaActionPerformed

    private void btnExtrasAlmondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtrasAlmondActionPerformed
        if (productSelected) {
            String id = "066";
            addExtra(id);
        }
    }//GEN-LAST:event_btnExtrasAlmondActionPerformed

    private void btnExtrasVinillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtrasVinillaActionPerformed
        if (productSelected) {
            String id = "067";
            addExtra(id);
        }
    }//GEN-LAST:event_btnExtrasVinillaActionPerformed

    private void btnExtrasCinnamonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtrasCinnamonActionPerformed
        if (productSelected) {
            String id = "068";
            addExtra(id);
        }
    }//GEN-LAST:event_btnExtrasCinnamonActionPerformed

    private void btnExtrasCaramelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtrasCaramelActionPerformed
        if (productSelected) {
            String id = "069";
            addExtra(id);
        }
    }//GEN-LAST:event_btnExtrasCaramelActionPerformed

    private void btnExtrasPumkinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtrasPumkinActionPerformed
        if (productSelected) {
            String id = "070";
            addExtra(id);
        }
    }//GEN-LAST:event_btnExtrasPumkinActionPerformed

    private void btnExtrasCinnamonGingerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtrasCinnamonGingerActionPerformed
        if (productSelected) {
            String id = "071";
            addExtra(id);
        }
    }//GEN-LAST:event_btnExtrasCinnamonGingerActionPerformed
//==============================================================================

//=============================TRANSACTION INTERACTIONS=========================    
    @SuppressWarnings("unchecked")
    private void btnVoidSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoidSelectedActionPerformed
        // Void the selected item in the transaction removing it from the transaction object.
        if (!listTransaction.isSelectionEmpty()) {
            if (listModel.getSize() > 0) {
                String selectedItem = listTransaction.getSelectedValue();
                int selectedIndex = listTransaction.getSelectedIndex();

                int amountOfItem = Integer.parseInt(selectedItem.substring(0,
                        selectedItem.indexOf("X")).trim());
                String productName = selectedItem.substring(selectedItem.indexOf("X") + 1,
                        selectedItem.indexOf("@")).trim();

                for (TransactionItem item : transaction.getItems()) {
                    if (item.getAmount() == amountOfItem
                            && productName.equalsIgnoreCase(item.getProduct().getProduct_name())) {
                        listModel.setElementAt(selectedItem + "  ( VOID )", selectedIndex);
                        transaction.getItems().remove(item);
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_btnVoidSelectedActionPerformed

    private void btnScrollUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScrollUpActionPerformed
        //Scroll upwards through the transaction
        int selectedIndex = listTransaction.getSelectedIndex();
        if (selectedIndex > 0) {
            listTransaction.setSelectedIndex(selectedIndex - 1);
        } else {
            listTransaction.setSelectedIndex(listModel.getSize() - 1);
        }
    }//GEN-LAST:event_btnScrollUpActionPerformed

    private void btnScrollDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScrollDownActionPerformed
        //Scroll downwards through the transaction
        int selectedIndex = listTransaction.getSelectedIndex();
        if (selectedIndex < listModel.getSize() - 1) {
            listTransaction.setSelectedIndex(selectedIndex + 1);
        } else {
            listTransaction.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnScrollDownActionPerformed

    @SuppressWarnings("unchecked")
    private void btnPayCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayCashActionPerformed
        //pay with cash
        //**customer can pay pard cash part card but cash must be tallied first**
        if (transactionActive && !transaction.getItems().isEmpty()) {

            if (!processingCashPayment) {
                balanceToPay = transaction.getTotal() - balancePaid;
                amount = 1;
                storedNumberString = "";
                listModel.addElement(" ");
                listModel.addElement("Total To Pay = £" + String.format("%.2f", balanceToPay));
//                  balancePaid = cashPayment(balanceToPay);

                txtDisplayEntryAndTotal.setText("Cash Paid = £");
                processingCashPayment = true;
            } else if (processingCashPayment) {
            try {
                balancePaid = Double.parseDouble(storedNumberString);
                storedNumberString = "";
            } catch (NumberFormatException e) {
                new Dialog_OK_UI(
                        this, true,
                        "Payment Error",
                        "Invalid Amount Entered"
                ).setVisible(true);
            }
                //Gets change
                if (balancePaid > balanceToPay && balancePaid != 0.00) {

                    double changeDue = balancePaid - balanceToPay;

                    if (Transaction.saveTransaction(transaction)) {
                        listModel.addElement(" ");
                        listModel.addElement("----------------------------------------------");
                        listModel.addElement(" ");
                        listModel.addElement("Payment Method Cash");
                        listModel.addElement("Total Paid = £" + String.format("%.2f", balancePaid));
                        listModel.addElement("Change Due = £" + String.format("%.2f", changeDue));
                        listModel.addElement(" ");
                        listModel.addElement("----------------------------------------------");
                        listModel.addElement(" ");
                        listModel.addElement("Transaction Successfull");

                        Employee.customerServed();
                        sessionSales++;
                        newTransaction();
                    }
                    //Still balance to pay
                } else if (balancePaid < balanceToPay && balancePaid != 0.00) {

                    balanceToPay -= balancePaid;
                    transaction.setTotal(balanceToPay);

                    listModel.addElement("----------------------------------------------");
                    listModel.addElement(" ");
                    listModel.addElement("Payment Method Cash");
                    listModel.addElement("Total Paid = £" + String.format("%.2f", balancePaid));
                    listModel.addElement(" ");
                    listModel.addElement("----------------------------------------------");
                    listModel.addElement(" ");
                    listModel.addElement("Total Still To Pay = £" + String.format("%.2f", balanceToPay));
                    listModel.addElement(" ");
                    listModel.addElement("----------------------------------------------");
                    processingCashPayment = false;
                    balancePaid = 0;

                    //full total Paid
                } else if (balancePaid == balanceToPay && balancePaid != 0.00) {
                    if (Transaction.saveTransaction(transaction)) {
                        listModel.addElement(" ");
                        listModel.addElement("----------------------------------------------");
                        listModel.addElement(" ");
                        listModel.addElement("Payment Method Cash");
                        listModel.addElement("Total Paid = £" + String.format("%.2f", balanceToPay));
                        listModel.addElement("Change Due = £0.00");
                        listModel.addElement(" ");
                        listModel.addElement("----------------------------------------------");
                        listModel.addElement(" ");
                        listModel.addElement("Transaction Successfull");

                        Employee.customerServed();
                        sessionSales++;
                        newTransaction();
                    }
                } else {
                    new Dialog_OK_UI(
                            this, true,
                            "Enter Amount",
                            "Enter Amount Paid"
                    ).setVisible(true);
                }
            }
        } else {
            new Dialog_OK_UI(
                    this, true,
                    "Transaction Error",
                    "No Transaction Started"
            ).setVisible(true);
        }
    }//GEN-LAST:event_btnPayCashActionPerformed

    @SuppressWarnings("unchecked")
    private void btnPayCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayCardActionPerformed
        //Pay with card and asking the customer for a pin [for this example the pin is set to 1234]

        if (transactionActive && !transaction.getItems().isEmpty()) {
            balanceToPay = transaction.getTotal() - balancePaid;
            amount = 1;

            txtDisplayEntryAndTotal.setText("Total To Pay = £" + String.format("%.2f", balanceToPay));
            listModel.addElement("");
            listModel.addElement("");
            listModel.addElement("Total To Pay: £" + String.format("%.2f", balanceToPay));

            new Dialog_Card_Payment(this, true, balanceToPay).setVisible(true);
            if (Payment.isPIN_SUCCESSFULL()) {
                if (Transaction.saveTransaction(transaction)) {
                    listModel.addElement("");
                    listModel.addElement("----------------------------------------------");
                    listModel.addElement("");
                    listModel.addElement("Payment Method Card");
                    listModel.addElement("Total Paid = £" + String.format("%.2f", balanceToPay));
                    listModel.addElement("Change Due = £0.00");
                    listModel.addElement("");
                    listModel.addElement("----------------------------------------------");
                    listModel.addElement("");
                    listModel.addElement("Transaction Successfull");

                    Employee.customerServed();
                    sessionSales++;
                    newTransaction();
                }

            }
        } else {
            new Dialog_OK_UI(
                    this, true,
                    "Transaction Error",
                    "No Transaction Started"
            ).setVisible(true);
        }
    }//GEN-LAST:event_btnPayCardActionPerformed
//==============================================================================

//===========================SALES REPORT TABLE=================================
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        //refresh sales report;
        updateSalesReport();
    }//GEN-LAST:event_btnRefreshActionPerformed
//==============================================================================

//=============================C.R.U.D==========================================
//============================USER CREATE=======================================
    private void btnCreatePinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePinActionPerformed
        //create a pin for the new employee profile
        int pin = (int) (Math.random() * 9000) + 1000;
        txtGetPin.setText(String.valueOf(pin));
    }//GEN-LAST:event_btnCreatePinActionPerformed

    private void btnCreateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateUserActionPerformed
        //create ne employee profile and save it
        String firstName = txtGetFirstName.getText();
        String lastName = txtGetLastName.getText();
        String pin = txtGetPin.getText();
        boolean isManager = false;
        if (radManager.isSelected()) {
            isManager = true;
        } else if (radEmployee.isSelected()) {
            isManager = false;
        }

        Employee newEmployee = new Employee(null, firstName, lastName, pin, isManager, 0);
        if (newEmployee.activateEmployee(newEmployee)) {
            new Dialog_OK_UI(
                    this, true,
                    "Successful",
                    "Employee Successfully Created"
            ).setVisible(true);
        } else {
            new Dialog_OK_UI(
                    this, true,
                    "Fail",
                    "Employee Failed To be Added"
            ).setVisible(true);

        }
        updateComboBoxes(cmboGetEmployeeForUpdate, cmboGetEmployeeForDelete);
        clearCRUD();
    }//GEN-LAST:event_btnCreateUserActionPerformed

    private void btnClearCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCreateActionPerformed
        clearCRUD();
    }//GEN-LAST:event_btnClearCreateActionPerformed
//==============================================================================

//==========================USER UPDATE=========================================
    private void cmboGetEmployeeForUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboGetEmployeeForUpdateActionPerformed
        // get the information of the employee you want to update
        if (!"...".equals(cmboGetEmployeeForUpdate.getSelectedItem().toString())) {
            String selectedItem = cmboGetEmployeeForUpdate.getSelectedItem().toString();
            String id = selectedItem.substring(0, selectedItem.indexOf(":"));

            Employee selectedEmployee = Employee.getValidEmployee(new Employee(id));

            txtGetFirstNameForUpdate.setText(selectedEmployee.getEmployee_first_name());
            txtGetLastNameForUpdate.setText(selectedEmployee.getEmployee_last_name());
            txtGetPinForUpdate.setText(selectedEmployee.getEmployee_pin());
            if (selectedEmployee.isEmployee_is_manager()) {
                radManagerForUpdate.setSelected(true);
            } else if (!selectedEmployee.isEmployee_is_manager()) {
                radEmployeeForUpdate.setSelected(true);
            }
        }
    }//GEN-LAST:event_cmboGetEmployeeForUpdateActionPerformed

    private void btnCreateNewPinForUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewPinForUpdateActionPerformed
        // create a new pin for the employee update
        int pin = (int) (Math.random() * 9000) + 1000;
        txtGetPinForUpdate.setText(String.valueOf(pin));
    }//GEN-LAST:event_btnCreateNewPinForUpdateActionPerformed

    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserActionPerformed
        //update the selected employee profile with the new information

        if (!"...".equals(cmboGetEmployeeForUpdate.getSelectedItem().toString())) {
            String selectedItem = cmboGetEmployeeForUpdate.getSelectedItem().toString();
            String firstName = txtGetFirstNameForUpdate.getText();
            String lastName = txtGetLastNameForUpdate.getText();
            String pin = txtGetPinForUpdate.getText();
            String id = selectedItem.substring(0, selectedItem.indexOf(":"));
            boolean isManager = false;
            if (radManager.isSelected()) {
                isManager = true;
            } else if (radEmployee.isSelected()) {
                isManager = false;
            }
            if (checkPin(pin)) {
                Employee selectedEmployee = Employee.getValidEmployee(new Employee(id));

                selectedEmployee.setEmployee_first_name(firstName);
                selectedEmployee.setEmployee_last_name(lastName);
                selectedEmployee.setEmployee_pin(pin);
                selectedEmployee.setEmployee_is_manager(isManager);

                if (selectedEmployee.update()) {
                    new Dialog_OK_UI(
                            this, true,
                            "Successful",
                            "Employee Successfully Updated"
                    ).setVisible(true);
                } else {
                    new Dialog_OK_UI(
                            this, true,
                            "Fail",
                            "Employee Failed To Update"
                    ).setVisible(true);
                }
            }
            updateComboBoxes(cmboGetEmployeeForUpdate, cmboGetEmployeeForDelete);
            clearCRUD();
        }
    }//GEN-LAST:event_btnUpdateUserActionPerformed

    private void btnClearCreateForUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCreateForUpdateActionPerformed
        clearCRUD();
    }//GEN-LAST:event_btnClearCreateForUpdateActionPerformed
//==============================================================================

//===============================USER DELETE====================================    
    private void cmboGetEmployeeForDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboGetEmployeeForDeleteActionPerformed
        //get the information of the employee that is be deleted
        if (!"...".equals(cmboGetEmployeeForDelete.getSelectedItem().toString())) {
            String selectedItem = cmboGetEmployeeForDelete.getSelectedItem().toString();
            String id = selectedItem.substring(0, selectedItem.indexOf(":"));

            Employee selectedEmployee = Employee.getValidEmployee(new Employee(id));

            txtGetFirstNameForDelete.setText(selectedEmployee.getEmployee_first_name());
            txtGetLastNameForDelete.setText(selectedEmployee.getEmployee_last_name());
            if (selectedEmployee.isEmployee_is_manager()) {
                radManagerForDelete.setSelected(true);
            } else if (!selectedEmployee.isEmployee_is_manager()) {
                radEmployeeForDelete.setSelected(true);
            }
        }
    }//GEN-LAST:event_cmboGetEmployeeForDeleteActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        //Delete the selected employee
        if (!"...".equals(cmboGetEmployeeForDelete.getSelectedItem().toString())) {
            String selectedItem = cmboGetEmployeeForDelete.getSelectedItem().toString();
            String id = selectedItem.substring(0, selectedItem.indexOf(":"));
            Employee selectedEmployee = Employee.getValidEmployee(new Employee(id));

            if (selectedEmployee.delete()) {
                new Dialog_OK_UI(
                        this, true,
                        "Successful",
                        "Employee Successfully Deleted"
                ).setVisible(true);
            } else {
                new Dialog_OK_UI(
                        this, true,
                        "Fail",
                        "Employee Failed To Be Deleted"
                ).setVisible(true);
            }
            updateComboBoxes(cmboGetEmployeeForUpdate, cmboGetEmployeeForDelete);
            clearCRUD();
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnClearCreateForDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCreateForDeleteActionPerformed
        clearCRUD();
    }//GEN-LAST:event_btnClearCreateForDeleteActionPerformed

    private void mnuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuLogoutActionPerformed
        listModel.clear();
        this.dispose();
        new Login_UI().setVisible(true);
    }//GEN-LAST:event_mnuLogoutActionPerformed
//==============================================================================
//==============================================================================

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EPOS_GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EPOS_GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EPOS_GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EPOS_GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login_UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearCreate;
    private javax.swing.JButton btnClearCreateForDelete;
    private javax.swing.JButton btnClearCreateForUpdate;
    private javax.swing.JButton btnColdDrinksPopularNo1;
    private javax.swing.JButton btnColdDrinksPopularNo2;
    private javax.swing.JButton btnColdDrinksPopularNo3;
    private javax.swing.JButton btnColdDrinksPopularNo4;
    private javax.swing.JButton btnColdDrinksPopularNo5;
    private javax.swing.JButton btnColdDrinksPopularNo6;
    private javax.swing.JButton btnColdDrinksPopularNo7;
    private javax.swing.JButton btnColdDrinksPopularNo8;
    private javax.swing.JButton btnColdDrinksPopularNo9;
    private javax.swing.JButton btnCreateNewPinForUpdate;
    private javax.swing.JButton btnCreatePin;
    private javax.swing.JButton btnCreateUser;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnDonutsPopularNo1;
    private javax.swing.JButton btnDonutsPopularNo2;
    private javax.swing.JButton btnDonutsPopularNo3;
    private javax.swing.JButton btnDonutsPopularNo4;
    private javax.swing.JButton btnDonutsPopularNo5;
    private javax.swing.JButton btnDonutsPopularNo6;
    private javax.swing.JButton btnDonutsPopularNo7;
    private javax.swing.JButton btnDonutsPopularNo8;
    private javax.swing.JButton btnDonutsPopularNo9;
    private javax.swing.JButton btnExtrasAlmond;
    private javax.swing.JButton btnExtrasCaramel;
    private javax.swing.JButton btnExtrasCinnamon;
    private javax.swing.JButton btnExtrasCinnamonGinger;
    private javax.swing.JButton btnExtrasDcaf;
    private javax.swing.JButton btnExtrasPumkin;
    private javax.swing.JButton btnExtrasSkim;
    private javax.swing.JButton btnExtrasSoya;
    private javax.swing.JButton btnExtrasVinilla;
    private javax.swing.JButton btnHotDrinksPopularNo1;
    private javax.swing.JButton btnHotDrinksPopularNo2;
    private javax.swing.JButton btnHotDrinksPopularNo3;
    private javax.swing.JButton btnHotDrinksPopularNo4;
    private javax.swing.JButton btnHotDrinksPopularNo5;
    private javax.swing.JButton btnHotDrinksPopularNo6;
    private javax.swing.JButton btnHotDrinksPopularNo7;
    private javax.swing.JButton btnHotDrinksPopularNo8;
    private javax.swing.JButton btnHotDrinksPopularNo9;
    private javax.swing.JButton btnHotFoodPopularNo1;
    private javax.swing.JButton btnHotFoodPopularNo2;
    private javax.swing.JButton btnHotFoodPopularNo3;
    private javax.swing.JButton btnHotFoodPopularNo4;
    private javax.swing.JButton btnHotFoodPopularNo5;
    private javax.swing.JButton btnHotFoodPopularNo6;
    private javax.swing.JButton btnHotFoodPopularNo7;
    private javax.swing.JButton btnHotFoodPopularNo8;
    private javax.swing.JButton btnHotFoodPopularNo9;
    private javax.swing.JButton btnKeypadClr;
    private javax.swing.JButton btnKeypadDecimal;
    private javax.swing.JButton btnKeypadEight;
    private javax.swing.JButton btnKeypadEnter;
    private javax.swing.JButton btnKeypadFive;
    private javax.swing.JButton btnKeypadFour;
    private javax.swing.JButton btnKeypadHundred;
    private javax.swing.JButton btnKeypadNine;
    private javax.swing.JButton btnKeypadOne;
    private javax.swing.JButton btnKeypadQty;
    private javax.swing.JButton btnKeypadSeven;
    private javax.swing.JButton btnKeypadSix;
    private javax.swing.JButton btnKeypadThree;
    private javax.swing.JButton btnKeypadTwo;
    private javax.swing.JButton btnKeypadZero;
    private javax.swing.JButton btnPayCard;
    private javax.swing.JButton btnPayCash;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnScrollDown;
    private javax.swing.JButton btnScrollUp;
    private javax.swing.JButton btnSelectProduct;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.JButton btnVoidSelected;
    private javax.swing.ButtonGroup btngrpIsManager;
    private javax.swing.ButtonGroup btngrpIsManagerForDelete;
    private javax.swing.ButtonGroup btngrpIsManagerForUpdate;
    private javax.swing.JComboBox<String> cmboGetEmployeeForDelete;
    private javax.swing.JComboBox<String> cmboGetEmployeeForUpdate;
    private javax.swing.JLabel imgStoreLogo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JLabel lblColdDrinksPopularNo1;
    private javax.swing.JLabel lblColdDrinksPopularNo2;
    private javax.swing.JLabel lblColdDrinksPopularNo3;
    private javax.swing.JLabel lblColdDrinksPopularNo4;
    private javax.swing.JLabel lblColdDrinksPopularNo5;
    private javax.swing.JLabel lblColdDrinksPopularNo6;
    private javax.swing.JLabel lblColdDrinksPopularNo7;
    private javax.swing.JLabel lblColdDrinksPopularNo8;
    private javax.swing.JLabel lblColdDrinksPopularNo9;
    private javax.swing.JLabel lblDonutsPopularNo1;
    private javax.swing.JLabel lblDonutsPopularNo2;
    private javax.swing.JLabel lblDonutsPopularNo3;
    private javax.swing.JLabel lblDonutsPopularNo4;
    private javax.swing.JLabel lblDonutsPopularNo5;
    private javax.swing.JLabel lblDonutsPopularNo6;
    private javax.swing.JLabel lblDonutsPopularNo7;
    private javax.swing.JLabel lblDonutsPopularNo8;
    private javax.swing.JLabel lblDonutsPopularNo9;
    private javax.swing.JLabel lblEmployeeFirstName;
    private javax.swing.JLabel lblEmployeeID;
    private javax.swing.JLabel lblEmployeeLastName;
    private javax.swing.JLabel lblGetFirstName;
    private javax.swing.JLabel lblGetFirstName1;
    private javax.swing.JLabel lblGetFirstNameForDelete;
    private javax.swing.JLabel lblGetLastName;
    private javax.swing.JLabel lblGetLastName1;
    private javax.swing.JLabel lblGetLastNameForDelete;
    private javax.swing.JLabel lblHeaderCurrentUser;
    private javax.swing.JLabel lblHeaderDate;
    private javax.swing.JLabel lblHotDrinksPopularNo1;
    private javax.swing.JLabel lblHotDrinksPopularNo2;
    private javax.swing.JLabel lblHotDrinksPopularNo3;
    private javax.swing.JLabel lblHotDrinksPopularNo4;
    private javax.swing.JLabel lblHotDrinksPopularNo5;
    private javax.swing.JLabel lblHotDrinksPopularNo6;
    private javax.swing.JLabel lblHotDrinksPopularNo7;
    private javax.swing.JLabel lblHotDrinksPopularNo8;
    private javax.swing.JLabel lblHotDrinksPopularNo9;
    private javax.swing.JLabel lblHotFoodPopularNo1;
    private javax.swing.JLabel lblHotFoodPopularNo2;
    private javax.swing.JLabel lblHotFoodPopularNo3;
    private javax.swing.JLabel lblHotFoodPopularNo4;
    private javax.swing.JLabel lblHotFoodPopularNo5;
    private javax.swing.JLabel lblHotFoodPopularNo6;
    private javax.swing.JLabel lblHotFoodPopularNo7;
    private javax.swing.JLabel lblHotFoodPopularNo8;
    private javax.swing.JLabel lblHotFoodPopularNo9;
    private javax.swing.JLabel lblManagerFirstName;
    private javax.swing.JLabel lblManagerID;
    private javax.swing.JLabel lblManagerLastName;
    private javax.swing.JLabel lblSearchbyName;
    private javax.swing.JLabel lblSelectUserForDelete;
    private javax.swing.JLabel lblSelectUserUpdate;
    private javax.swing.JLabel lblStoreName;
    private javax.swing.JList<String> listTransaction;
    private javax.swing.JMenuBar mnuBar;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuLogout;
    private javax.swing.JMenuItem mnuSeeLastTransaction;
    private javax.swing.JMenuItem mnuStoreTransaction;
    private javax.swing.JMenuItem mnuStoredTransactionFive;
    private javax.swing.JMenuItem mnuStoredTransactionFour;
    private javax.swing.JMenuItem mnuStoredTransactionOne;
    private javax.swing.JMenuItem mnuStoredTransactionThree;
    private javax.swing.JMenuItem mnuStoredTransactionTwo;
    private javax.swing.JMenu mnuStoredTransactions;
    private javax.swing.JMenuItem mnuVoidTransaction;
    private javax.swing.JScrollPane paneResultsTable;
    private javax.swing.JPanel pnlColdDrinks;
    private javax.swing.JPanel pnlCurrentUser;
    private javax.swing.JPanel pnlDateAndUser;
    private javax.swing.JPanel pnlDonuts;
    private javax.swing.JPanel pnlExtras;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlHotDrinks;
    private javax.swing.JPanel pnlHotFood;
    private javax.swing.JPanel pnlKeyPad;
    private javax.swing.JTabbedPane pnlMain;
    private javax.swing.JPanel pnlMainBody;
    private javax.swing.JTabbedPane pnlPopularItems;
    private javax.swing.JPanel pnlProducts;
    private javax.swing.JPanel pnlTransaction;
    private javax.swing.JTabbedPane pnlUserCRUD;
    private javax.swing.JRadioButton radEmployee;
    private javax.swing.JRadioButton radEmployeeForDelete;
    private javax.swing.JRadioButton radEmployeeForUpdate;
    private javax.swing.JRadioButton radManager;
    private javax.swing.JRadioButton radManagerForDelete;
    private javax.swing.JRadioButton radManagerForUpdate;
    private javax.swing.JScrollPane scrlpSalesReport;
    private javax.swing.JPanel tabCreate;
    private javax.swing.JPanel tabDelete;
    private javax.swing.JPanel tabManager;
    private javax.swing.JPanel tabTill;
    private javax.swing.JPanel tabUpdate;
    private javax.swing.JPanel tabUser;
    private javax.swing.JTable tblSalesReport;
    private javax.swing.JTable tblSearchResults;
    private javax.swing.JTextField txtDisplayEntryAndTotal;
    private javax.swing.JTextField txtGetFirstName;
    private javax.swing.JTextField txtGetFirstNameForDelete;
    private javax.swing.JTextField txtGetFirstNameForUpdate;
    private javax.swing.JTextField txtGetLastName;
    private javax.swing.JTextField txtGetLastNameForDelete;
    private javax.swing.JTextField txtGetLastNameForUpdate;
    private javax.swing.JTextField txtGetPin;
    private javax.swing.JTextField txtGetPinForUpdate;
    private javax.swing.JTextField txtGetProductSearch;
    // End of variables declaration//GEN-END:variables
}
